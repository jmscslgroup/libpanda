#include <unistd.h>
#include <cstring>
#include "panda.h"
#include "panda/vin.h"


#include "panda/nissan.h"
#include "panda/toyota.h"


// to_signed, MAX are from panda firmware source:
#define MAX(a,b) \
 ({ __typeof__ (a) _a = (a); \
     __typeof__ (b) _b = (b); \
   (_a > _b) ? _a : _b; })

// convert a trimmed integer to signed 32 bit int
int to_signed(int d, int bits) {
  int d_signed = d;
  if (d >= (1 << MAX((bits - 1), 0))) {
    d_signed = d - (1 << MAX(bits, 0));
  }
  return d_signed;
}

void printCanFrame(Panda::CanFrame& frame) {
	fprintf(stderr, " - Message ID: %04x\n", frame.messageID);
	fprintf(stderr, " - BUS       : %d\n", frame.bus);
	fprintf(stderr, " - Data Received: ");
	
	for (int i = 0; i < frame.dataLength; i++) {
		fprintf(stderr, "0x%02x ", frame.data[i]);
	}
	fprintf(stderr, "\n");
	
}


class CanPrint : public Panda::CanListener {
public:
	CanPrint() {};
	void newDataNotification(Panda::CanFrame* frame) {
		printf("New CAN read: %d.%06d,", (unsigned int)frame->sysTime.tv_sec, (int)frame->sysTime.tv_usec);

		printf("%d,%u,", (int)frame->bus, frame->messageID);

		for (int i =0; i < frame->dataLength; i++) {
			printf("%02x", frame->data[i]);
		}
		printf(",%d\n", frame->dataLength);
		
	}
};


unsigned char nissan1[] = {0x00, 0xF0, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x85, 0x30, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x59, 0x30, 0x80, 0x55, 0x80, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x2D, 0x3F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x17, 0x38, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0xF1, 0xB3, 0x2B, 0x01, 0xC0, 0xD1, 0xA9, 0x3C, 0x3C, 0xDB, 0xC0, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xC4, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xB4, 0x92, 0x65, 0x7A, 0x8D, 0x13, 0x08, 0x6C, 0x5F, 0xC0, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xFD, 0xE0, 0x2A, 0x5E, 0xA0, 0x7F, 0xF8, 0x00, 0x00, 0x00, 0x64, 0xB5, 0xF5, 0x75, 0x59, 0x50, 0x7F, 0x35, 0x72, 0x02, 0xAF, 0xB0, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0x12, 0x98, 0x20, 0x00, 0x00, 0x00, 0x64, 0xB3, 0xC1, 0x9D, 0x9B, 0x92, 0x47, 0x4D, 0x6D, 0x33};


unsigned char nissan2[] = {0x00, 0xE0, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xDA, 0xB0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xC0, 0x00, 0x00, 0x75, 0x08, 0x83, 0xB4, 0xE1, 0xA2, 0x16, 0x05, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0xC6, 0xFB, 0x6F, 0xE3, 0x61, 0x25, 0xBD, 0x8D, 0x9F};

unsigned char nissan3[] = {0x00, 0xE0, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x6A, 0xC0, 0x80, 0x61, 0x00, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xAB, 0xC0, 0x00, 0x01, 0x9A, 0x08, 0xD5, 0xC0, 0x00, 0x00, 0x80, 0x61, 0x00, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xD2, 0xC0, 0x00, 0x00, 0xF8, 0x6B, 0x59, 0x64, 0xE6, 0x6A, 0x08, 0x1A, 0xCE, 0xC5, 0x80, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x70, 0x00, 0x00, 0x20, 0x01, 0xA9, 0xEE, 0x20};

unsigned char nissan4[] = {0x00, 0xD0, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xAB, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x9F, 0x90, 0x00, 0x00, 0x00, 0x00, 0x3A, 0x50, 0xEF, 0x7A, 0xA1, 0xB5, 0xEA, 0x01, 0xCB, 0xAB};

unsigned char nissan5[] = {0x00, 0xF0, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xC8, 0xE9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x06, 0x04, 0x04, 0x06, 0x00, 0x0F, 0x0E, 0x07, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xDC, 0x93, 0x6B, 0x01, 0xE8, 0xBC, 0x18, 0x3E, 0xAD, 0xC5, 0xC0, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xB4, 0x96, 0x80, 0x55, 0x53, 0xA1, 0xBD, 0xEC, 0x00, 0x00, 0x64, 0xDE, 0xDE, 0x6C, 0x39, 0xD6, 0x04, 0x7B, 0x0E, 0x70, 0xB0, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xD5, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x77, 0x08, 0x0E, 0x8F, 0xF9, 0xCB, 0xAA, 0xEA, 0xD5, 0xE6, 0x30, 0xF0, 0x08, 0x02, 0x00, 0x00, 0x83, 0x77, 0x00, 0xC0, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xB3, 0x50, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0xDF, 0x72, 0xDD, 0x98, 0x8F, 0x42, 0x53, 0x0E, 0x1F};
unsigned char nissan6[] = {0x00, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xAB, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x9F, 0x90, 0x00, 0x00, 0x00, 0x00, 0x69, 0xE6, 0xE7, 0xFE, 0x87, 0x84, 0xB9, 0x90, 0x6B, 0x54, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xAB, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x9F, 0x90, 0x00, 0x00, 0x00, 0x01, 0x00, 0x69, 0xE6, 0xE7, 0xFE, 0x87, 0x84, 0xB9, 0x90, 0x6B, 0x54, 0xB5, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0xD4, 0x48, 0x20, 0x00, 0x00, 0x00, 0x74, 0x72, 0x0A, 0xA8, 0x14, 0xD6, 0xAA, 0x5F, 0x62, 0xF4, 0xB1, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0xD4, 0x48, 0x20, 0x00, 0x00, 0x00, 0x74, 0x72, 0x0A, 0xA8, 0x14, 0xD6, 0xAA, 0x5F, 0x62, 0xF4, 0xC5, 0x40, 0x02, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x1C, 0x40, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x73, 0xA3, 0x3D, 0xAF, 0x0D, 0xB5, 0x39, 0x86, 0x5E, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x1C, 0x40, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x73, 0xA3, 0x3D, 0xAF, 0x0D, 0xB5, 0x39, 0x86, 0x5E, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x03, 0x41, 0x08, 0xB8, 0x86, 0x80, 0x26, 0x53, 0x76, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0x74, 0x0F, 0x3B, 0x7B, 0x28, 0xFE, 0x31, 0x1F, 0x81, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xB8, 0x86, 0x80, 0x26, 0x53, 0x76, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0x74, 0x0F, 0x3B, 0x7B, 0x28, 0xFE, 0x31, 0x1F, 0x81, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x04, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x1A, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x75, 0xA5, 0x37, 0xA9, 0x78, 0x63, 0xFB, 0x15, 0x5A, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x1A, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x75, 0xA5, 0x37, 0xA9, 0x78, 0x63, 0xFB, 0x15, 0x5A, 0xE5, 0x05, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xA9, 0xB0, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xA3, 0xB0, 0x00, 0x01, 0x9A, 0x08, 0x71, 0xB0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xDA, 0xB0, 0x00, 0x00, 0x52, 0xD6, 0x8C, 0x36, 0x46, 0x07, 0xEA, 0x84, 0x74, 0x06, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xA9, 0xB0, 0x06, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xA3, 0xB0, 0x00, 0x01, 0x9A, 0x08, 0x71, 0xB0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xDA, 0xB0, 0x00, 0x00, 0x52, 0xD6, 0x8C, 0x36, 0x46, 0x07, 0xEA, 0x84, 0x74, 0x06, 0xE4, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xD2, 0xA0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0x07, 0x9C, 0xA4, 0xE1, 0xE2, 0x16, 0x2B, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x31, 0xA6, 0xBE, 0x3B, 0x4C, 0xF2, 0x4E, 0x99, 0x54, 0xE0, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xD2, 0xA0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0x9C, 0xA4, 0xE1, 0xE2, 0x16, 0x2B, 0x32, 0x98, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x31, 0xA6, 0xBE, 0x3B, 0x4C, 0xF2, 0x4E, 0x99, 0x54, 0x85, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0x85, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6E, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6E, 0x81, 0x38, 0x09, 0x10, 0x00, 0x00, 0x4F, 0x6E, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6E, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xAA, 0x60, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x52, 0x8B, 0xEE, 0x56, 0x6C, 0x48, 0xEC, 0xFE, 0x54, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xAA, 0x60, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x52, 0x8B, 0xEE, 0x56, 0x6C, 0x48, 0xEC, 0xFE, 0x54, 0xB5, 0x90, 0x0A, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0xB2, 0x30, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x53, 0x87, 0x7B, 0xCD, 0xE6, 0xAD, 0x00, 0x9B, 0xEB, 0xB1, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0xB2, 0x30, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x53, 0x87, 0x7B, 0xCD, 0xE6, 0xAD, 0x00, 0x9B, 0xEB, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0xE2, 0x60, 0x00, 0x00, 0x00, 0x00, 0x0B, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x91, 0x60, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x4A, 0x6F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xA2, 0x60, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x54, 0x98, 0x41, 0x52, 0xE9, 0x5F, 0x30, 0x9D, 0x3E, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x0C, 0xE2, 0x60, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x91, 0x60, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x4A, 0x6F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xA2, 0x60, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x54, 0x98, 0x41, 0x52, 0xE9, 0x5F, 0x30, 0x9D, 0x3E, 0xF5, 0x58, 0x0D, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB0, 0x30, 0x86, 0x94, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x32, 0x3F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x18, 0x30, 0x7C, 0xA7, 0xC4, 0x7C, 0xF7, 0xD1, 0x00, 0x00, 0xAB, 0x08, 0xDB, 0x3B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x76, 0x95, 0x36, 0x3A, 0xF3, 0x6A, 0x0E, 0x3B, 0xFD, 0x9E, 0xF1, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB0, 0x30, 0x86, 0x94, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x32, 0x3F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x18, 0x30, 0x7C, 0xA7, 0xC4, 0x7C, 0xF7, 0xD1, 0x00, 0x00, 0xAB, 0x08, 0xDB, 0x3B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x0F, 0x76, 0x95, 0x36, 0x3A, 0xF3, 0x6A, 0x3B, 0xFD, 0x9E, 0xF5, 0x18, 0x18, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x25, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x10, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x18, 0x18, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x25, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x11, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x95, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x91, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xF5, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x12, 0x03, 0x16, 0xA9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x59, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0A, 0x32, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x77, 0x71, 0xF5, 0xB4, 0x9B, 0x9E, 0x48, 0x79, 0x7B, 0xF1, 0x30, 0x13, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0x16, 0xA9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x59, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0A, 0x32, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x77, 0x71, 0xF5, 0xB4, 0x9B, 0x14, 0x9E, 0x48, 0x79, 0x7B, 0xB5, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0x1C, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x78, 0x51, 0x8E, 0x1F, 0x3C, 0xE3, 0x4B, 0x97, 0x20, 0xB1, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0x1C, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x78, 0x51, 0x8E, 0x1F, 0x3C, 0xE3, 0x4B, 0x97, 0x20, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x15, 0x9A, 0x96, 0x80, 0x26, 0x53, 0x6F, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0x79, 0x74, 0x1B, 0x0C, 0x71, 0xA8, 0xE4, 0x8D, 0xD1, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x9A, 0x96, 0x80, 0x26, 0x53, 0x6F, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0x79, 0x74, 0x1B, 0x0C, 0x71, 0xA8, 0xE4, 0x8D, 0xD1, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x7D, 0xA0, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x49, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xE7, 0xFC, 0xBD, 0x9D, 0x6C, 0x2E, 0x25, 0xF4, 0xF8, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x7D, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x49, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xE7, 0xFC, 0xBD, 0x9D, 0x6C, 0x2E, 0x25, 0xF4, 0xF8, 0xC4, 0x40, 0x05, 0x17, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xA5, 0x50, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7A, 0x26, 0x20, 0x0C, 0x58, 0x43, 0xD6, 0x09, 0x36, 0xC0, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xA5, 0x50, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7A, 0x26, 0x20, 0x0C, 0x58, 0x43, 0xD6, 0x09, 0x36, 0xB5, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x18, 0x05, 0x4E, 0x50, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xE8, 0x71, 0x73, 0x54, 0xCF, 0xE5, 0x2F, 0x7F, 0xD9, 0xB1, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x4E, 0x50, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xE8, 0x71, 0x73, 0x54, 0xCF, 0xE5, 0x2F, 0x7F, 0xD9, 0xC5, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0x03, 0x54, 0x08, 0x02, 0xC3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0xE9, 0x19, 0xE7, 0xA2, 0xD3, 0x1B, 0x54, 0xD0, 0x5B, 0x8B, 0xC1, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0x03, 0x54, 0x08, 0x02, 0xC3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0xE9, 0xE7, 0xA2, 0xD3, 0x1B, 0x54, 0xD0, 0x5B, 0x8B, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xB5, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xAB, 0x1A, 0xCB, 0x60, 0x00, 0x00, 0x00, 0x74, 0x7B, 0x9B, 0x37, 0x8F, 0xCF, 0x3E, 0x93, 0xA9, 0xAD, 0xB1, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xAB, 0xCB, 0x60, 0x00, 0x00, 0x00, 0x74, 0x7B, 0x9B, 0x37, 0x8F, 0xCF, 0x3E, 0x93, 0xA9, 0xAD, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xA3, 0xB0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7C, 0x63, 0xA6, 0x1B, 0x03, 0xA2, 0x16, 0x8F, 0x08, 0xA2, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xA3, 0xB0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7C, 0x63, 0xA6, 0x03, 0xA2, 0x16, 0x8F, 0x08, 0xA2, 0x75, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x30, 0xAC, 0x71, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x30, 0xAC, 0xE5, 0x58, 0x04, 0x00, 0x1C, 0x00, 0x00, 0x01, 0x35, 0x08, 0xA1, 0xC0, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xAB, 0xC0, 0x00, 0x01, 0x9A, 0x08, 0x79, 0xC0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xD2, 0xC0, 0x00, 0x00, 0x52, 0xD7, 0x05, 0x33, 0x11, 0x6E, 0xEA, 0xFC, 0x53, 0x3C, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xA1, 0xC0, 0x80, 0x27, 0x80, 0x1D, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xAB, 0xC0, 0x00, 0x01, 0x9A, 0x08, 0x79, 0xC0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xD2, 0xC0, 0x00, 0x00, 0x52, 0xD7, 0x05, 0x33, 0x11, 0x6E, 0xEA, 0xFC, 0x53, 0x3C, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x6B, 0xB0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0xD8, 0xB4, 0xE2, 0x1E, 0x02, 0x16, 0x2B, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x32, 0xE1, 0xCD, 0xFA, 0x12, 0x45, 0xFA, 0xBA, 0x05, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x6B, 0xB0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0xD8, 0xB4, 0xE2, 0x02, 0x16, 0x2B, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x32, 0xE1, 0xCD, 0xFA, 0x12, 0x45, 0xFA, 0xBA, 0x05, 0x85, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x13, 0x70, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x56, 0x7A, 0x20, 0xCA, 0x12, 0xE5, 0xE1, 0x6A, 0x24, 0xDB, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x13, 0x70, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x56, 0x7A, 0xCA, 0x12, 0xE5, 0xE1, 0x6A, 0x24, 0xDB, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x5B, 0x70, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x28, 0x70, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x21, 0x06, 0xF3, 0x7F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x1B, 0x70, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x57, 0xD6, 0x6A, 0xE8, 0x13, 0x90, 0xEB, 0x7D, 0x03, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x5B, 0x70, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x28, 0x70, 0x80, 0x26, 0x22, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0xF3, 0x7F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x1B, 0x70, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x57, 0xD6, 0x6A, 0xE8, 0x13, 0x90, 0xEB, 0x7D, 0x03, 0xF4, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB3, 0x40, 0x86, 0x93, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x23, 0x3A, 0x4F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xBB, 0x40, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xD3, 0x4B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7D, 0x87, 0x54, 0x8E, 0xC1, 0xDD, 0x08, 0xC6, 0x8B, 0xF0, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB3, 0x40, 0x86, 0x93, 0x24, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x3A, 0x4F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xBB, 0x40, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xD3, 0x4B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7D, 0x87, 0x54, 0x8E, 0xC1, 0xDD, 0x08, 0xC6, 0x8B, 0xD4, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x25, 0x62, 0x08, 0xC4, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0xF0, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xEA, 0x6F, 0x65, 0x2B, 0xD9, 0x06, 0x51, 0xE1, 0x70, 0xD0, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xC4, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0xF0, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xEA, 0x6F, 0x65, 0x2B, 0xD9, 0x26, 0x06, 0x51, 0xE1, 0x70, 0xB5, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0x6D, 0x58, 0x20, 0x00, 0x00, 0x00, 0x74, 0x7E, 0x8B, 0xBD, 0x82, 0x9E, 0x18, 0x14, 0x72, 0x24, 0xB1, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0x6D, 0x58, 0x20, 0x00, 0x00, 0x00, 0x74, 0x7E, 0x8B, 0xBD, 0x82, 0x9E, 0x18, 0x14, 0x72, 0x24, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x27, 0x73, 0x60, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7F, 0x37, 0xB5, 0x61, 0xEC, 0xE1, 0x8E, 0xAB, 0xE4, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x73, 0x60, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x7F, 0x37, 0xB5, 0x61, 0xEC, 0xE1, 0x8E, 0xAB, 0xE4, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xB3, 0xA6, 0x80, 0x26, 0x53, 0x28, 0x64, 0x3E, 0x7C, 0x00, 0x00, 0x74, 0x80, 0x95, 0x91, 0xD8, 0x8A, 0xAE, 0xED, 0x56, 0x50, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xB3, 0xA6, 0x80, 0x26, 0x53, 0x64, 0x3E, 0x7C, 0x00, 0x00, 0x74, 0x80, 0x95, 0x91, 0xD8, 0x8A, 0xAE, 0xED, 0x56, 0x50, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x78, 0x09, 0x29, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xAB, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x81, 0xC3, 0xE3, 0xF0, 0x8D, 0x99, 0x1F, 0x46, 0x00, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xAB, 0xC0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x81, 0xC3, 0xE3, 0xF0, 0x8D, 0x99, 0x1F, 0x46, 0x00, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x2A, 0x08, 0x18, 0xD0, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x12, 0xD0, 0x00, 0x01, 0x9A, 0x08, 0xC0, 0xD0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x6B, 0xD0, 0x00, 0x00, 0x52, 0xD9, 0x68, 0x86, 0x37, 0x66, 0xD6, 0x8E, 0x57, 0x8B, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x18, 0xD0, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x2B, 0x01, 0xE0, 0x02, 0x12, 0xD0, 0x00, 0x01, 0x9A, 0x08, 0xC0, 0xD0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x6B, 0xD0, 0x00, 0x00, 0x52, 0xD9, 0x68, 0x86, 0x37, 0x66, 0xD6, 0x8E, 0x57, 0x8B, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x63, 0xC0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0xD0, 0xC4, 0xE2, 0x02, 0x16, 0x2B, 0x32, 0x2C, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x33, 0xA4, 0x37, 0x9E, 0x39, 0x23, 0x31, 0x1B, 0x44, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x63, 0xC0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0xD0, 0xC4, 0xE2, 0x02, 0x16, 0x2B, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x33, 0xA4, 0x37, 0x9E, 0x39, 0x23, 0x31, 0x1B, 0x44, 0x84, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0x80, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0x84, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6E, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6E, 0x80, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6E, 0x51, 0x88, 0x2E, 0x5E, 0xAC, 0x4F, 0x6E, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xBA, 0x80, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x58, 0x7E, 0x7B, 0x98, 0xD4, 0x31, 0x6F, 0x13, 0x1E, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xBA, 0x80, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x58, 0x7E, 0x7B, 0x98, 0xD4, 0x31, 0x6F, 0x13, 0x1E, 0xB5, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0x2F, 0xBA, 0x40, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x59, 0x5A, 0xFD, 0x26, 0xD2, 0x91, 0xF5, 0x18, 0xA1, 0xB1, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0xBA, 0x40, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x59, 0x5A, 0xFD, 0x26, 0xD2, 0x91, 0xF5, 0x18, 0xA1, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0xF2, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x81, 0x30, 0x80, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x5A, 0x8F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xB2, 0x80, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x5A, 0xDC, 0xEB, 0xC2, 0x06, 0xA6, 0xB1, 0x65, 0x94, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0xF2, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x31, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x81, 0x80, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x5A, 0x8F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xB2, 0x80, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x5A, 0xDC, 0xEB, 0xC2, 0x06, 0xA6, 0xB1, 0x65, 0x94, 0xF5, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x0A, 0x32, 0x50, 0x86, 0x93, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x83, 0x5F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x02, 0x50, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x6A, 0x5B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x82, 0xD4, 0x71, 0xC9, 0xEF, 0xB2, 0xE1, 0x3A, 0x76, 0xF1, 0x58, 0x0D, 0x00, 0x33, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x0A, 0x50, 0x86, 0x93, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x83, 0x5F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x02, 0x50, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x6A, 0x5B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x82, 0xD4, 0x71, 0xC9, 0xEF, 0xB2, 0xE1, 0x34, 0x3A, 0x76, 0xF5, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xAF, 0xB9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0xE0, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0B, 0x2F, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0xB9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x83, 0x35, 0xA4, 0xDD, 0xE1, 0xF3, 0x2E, 0x51, 0x85, 0xFF, 0xF1, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xAF, 0xB9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0xE0, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0B, 0x2F, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0B, 0xB9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x00, 0x74, 0x83, 0xA4, 0xDD, 0xE1, 0xF3, 0x2E, 0x51, 0x85, 0xFF, 0xB5, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xA5, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x84, 0xFD, 0xD9, 0x1C, 0xD2, 0xA8, 0xD7, 0x95, 0x88, 0xB1, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xA5, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x84, 0xFD, 0xD9, 0x1C, 0xD2, 0xA8, 0xD7, 0x95, 0x37, 0x88, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xCC, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0xF8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xEB, 0x45, 0x1F, 0xBA, 0xFE, 0xA8, 0xC7, 0xA4, 0x9E, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xCC, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0xF8, 0xC0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x69, 0xEB, 0x45, 0x1F, 0xBA, 0xFE, 0xA8, 0xC7, 0xA4, 0x9E, 0xB5, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x98, 0x60, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xEC, 0x61, 0x4A, 0x9E, 0xDA, 0x07, 0x76, 0xD1, 0x5F, 0xB1, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x98, 0x60, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xEC, 0x61, 0x4A, 0x9E, 0xDA, 0x07, 0x76, 0xD1, 0x5F, 0xC5, 0x39, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xAE, 0xB6, 0x80, 0x26, 0x53, 0x78, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0x85, 0xA6, 0xD4, 0x3F, 0x14, 0x1F, 0x64, 0x75, 0xFD, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xAE, 0xB6, 0x80, 0x26, 0x53, 0x78, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0x85, 0xA6, 0xD4, 0x3F, 0x14, 0x1F, 0x64, 0x75, 0xFD, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x3A, 0x00, 0xA8, 0x07, 0xCA, 0x70, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x86, 0x52, 0xA9, 0x6B, 0x48, 0x10, 0x51, 0x59, 0x3D, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xCA, 0x70, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x86, 0x52, 0xA9, 0x6B, 0x48, 0x10, 0x51, 0x59, 0x3D, 0xB5, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0x12, 0xDB, 0x3B, 0x60, 0x00, 0x00, 0x00, 0x74, 0x87, 0x19, 0x00, 0xC0, 0xA5, 0xE6, 0x45, 0x26, 0x18, 0xB1, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0x12, 0xDB, 0x60, 0x00, 0x00, 0x00, 0x74, 0x87, 0x19, 0x00, 0xC0, 0xA5, 0xE6, 0x45, 0x26, 0x18, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x75, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0x3C, 0xFE, 0x00, 0x34, 0x81, 0x71, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x34, 0x81, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x12, 0xD0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x88, 0x25, 0xA7, 0x98, 0xA4, 0x24, 0x62, 0x1D, 0xFA, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x12, 0xD0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3D, 0x00, 0x74, 0x88, 0x25, 0xA7, 0x98, 0xA4, 0x24, 0x62, 0x1D, 0xFA, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xCE, 0xE0, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xC4, 0xE0, 0x00, 0x01, 0x9A, 0x08, 0x16, 0xE0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xBD, 0xE0, 0x00, 0x00, 0x52, 0xDA, 0x11, 0x88, 0x38, 0x72, 0x6A, 0x18, 0xD7, 0x3E, 0x0B, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xCE, 0xE0, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xC4, 0xE0, 0x00, 0x01, 0x9A, 0x08, 0x16, 0xE0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xBD, 0xE0, 0x00, 0x00, 0x52, 0xDA, 0x11, 0x88, 0x38, 0x72, 0x6A, 0x18, 0xD7, 0x0B, 0xA4, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x03, 0xA6, 0x02, 0x3F, 0xE8, 0xB0, 0x52, 0xDB, 0x17, 0x48, 0x6F, 0x3E, 0x11, 0xB9, 0x44, 0x00, 0xA0, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x03, 0xA6, 0x02, 0xE8, 0xB0, 0x52, 0xDB, 0x17, 0x48, 0x6F, 0x3E, 0x11, 0xB9, 0x44, 0x00, 0xE4, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xDA, 0xD0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0x94, 0xD4, 0xE1, 0xE2, 0x16, 0x2B, 0x32, 0x98, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x34, 0x31, 0x48, 0x4D, 0x3A, 0x89, 0xA0, 0x24, 0x79, 0xE0, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xDA, 0xD0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0x94, 0xD4, 0xE1, 0xE2, 0x16, 0x2B, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x7C, 0x34, 0x31, 0x48, 0x4D, 0x3A, 0x89, 0xA0, 0x24, 0x79, 0xB4, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x03, 0x90, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x5C, 0xC0, 0xFE, 0x2C, 0xF9, 0x41, 0x06, 0x5B, 0x40, 0xB0, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x03, 0x90, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x5C, 0xC0, 0xFE, 0x2C, 0xF9, 0x41, 0x06, 0x5B, 0x40, 0x42, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x4B, 0x90, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x38, 0x90, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0xE3, 0x9F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x0B, 0x90, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x5D, 0xCB, 0x0F, 0x43, 0x3C, 0xEB, 0x4A, 0xCE, 0x5C, 0x77, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x4B, 0x90, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x38, 0x90, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0xE3, 0x9F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x0B, 0x90, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0xBB, 0x5D, 0xCB, 0x0F, 0x3C, 0xEB, 0x4A, 0xCE, 0x5C, 0x77, 0x85, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xF4, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xDC, 0x60, 0x86, 0x93, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x55, 0x6F, 0xFF, 0xFF, 0x7D, 0xFE, 0x45, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xD4, 0x60, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xBC, 0x6B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x89, 0xB9, 0xEC, 0x47, 0xA3, 0xB8, 0x11, 0x19, 0xB9, 0xF0, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xDC, 0x60, 0x86, 0x93, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x46, 0x55, 0x6F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xD4, 0x60, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xBC, 0x6B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x89, 0xB9, 0xEC, 0x47, 0xA3, 0xB8, 0x11, 0x19, 0xB9, 0xD4, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x75, 0xD0, 0x00, 0x00, 0x47, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x41, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xED, 0x13, 0x11, 0x99, 0xC5, 0x2C, 0xAE, 0x53, 0x54, 0xD0, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x75, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x41, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xED, 0x13, 0x11, 0x99, 0xC5, 0x2C, 0xAE, 0x53, 0x54, 0xC5, 0x40, 0x48, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x63, 0x80, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8B, 0x6C, 0xE8, 0x87, 0x12, 0xAE, 0x45, 0x54, 0xB3, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x63, 0x80, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8B, 0x6C, 0xE8, 0x87, 0x12, 0xAE, 0x45, 0x54, 0xB3, 0xB5, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x49, 0x16, 0x04, 0xBB, 0x68, 0x20, 0x00, 0x00, 0x00, 0x74, 0x8A, 0x2F, 0xF9, 0xC6, 0x6F, 0x92, 0x1D, 0xAE, 0x90, 0xB1, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0xBB, 0x68, 0x20, 0x00, 0x00, 0x00, 0x74, 0x8A, 0x2F, 0xF9, 0xC6, 0x6F, 0x92, 0x1D, 0xAE, 0x90, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x4B, 0xC6, 0x80, 0x26, 0x53, 0x3D, 0x3E, 0x9C, 0x00, 0x00, 0x74, 0x4A, 0x8C, 0xF4, 0xC9, 0x8D, 0xD5, 0x99, 0x85, 0xF1, 0xD9, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x4B, 0xC6, 0x80, 0x26, 0x53, 0x3D, 0x3E, 0x9C, 0x00, 0x00, 0x74, 0x8C, 0xF4, 0xC9, 0x8D, 0xD5, 0x99, 0x85, 0xF1, 0xD9, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x4B, 0xC4, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8D, 0x8F, 0x4C, 0x90, 0x22, 0x14, 0x7C, 0x9F, 0xCB, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xC4, 0xE0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8D, 0x8F, 0x4C, 0x90, 0x22, 0x14, 0x7C, 0x9F, 0xCB, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x77, 0xF0, 0x80, 0x27, 0x80, 0x4C, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x7D, 0xF0, 0x00, 0x01, 0x9A, 0x08, 0xAF, 0xF0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x04, 0xF0, 0x00, 0x00, 0x52, 0xDE, 0x70, 0x5A, 0x29, 0x34, 0x8A, 0x6F, 0xB5, 0x88, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x77, 0xF0, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x7D, 0xF0, 0x00, 0x4D, 0x01, 0x9A, 0x08, 0xAF, 0xF0, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x04, 0xF0, 0x00, 0x00, 0x52, 0xDE, 0x70, 0x5A, 0x29, 0x34, 0x8A, 0x6F, 0xB5, 0x88, 0x65, 0x90, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0x90, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x0C, 0xE0, 0x00, 0x4E, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0xDD, 0xE4, 0xE1, 0xA2, 0x16, 0x2B, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x35, 0xD8, 0x3B, 0xEF, 0x55, 0x1D, 0x26, 0xFE, 0x7B, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x0C, 0xE0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0xDD, 0x4F, 0xE4, 0xE1, 0xA2, 0x16, 0x2B, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x35, 0xD8, 0x3B, 0xEF, 0x55, 0x1D, 0x26, 0xFE, 0x7B, 0x84, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x80, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x84, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x50, 0x6C, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6C, 0x80, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6C, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6C, 0xB4, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xD5, 0xA0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x5E, 0x5C, 0x03, 0xA5, 0x02, 0xB9, 0xC3, 0xE7, 0x80, 0xB0, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xD5, 0xA0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x5E, 0x5C, 0x51, 0x03, 0xA5, 0x02, 0xB9, 0xC3, 0xE7, 0x80, 0xB4, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0x03, 0x50, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x5F, 0xBC, 0x77, 0x05, 0xCF, 0xAE, 0x92, 0xE8, 0xD4, 0xB0, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0x03, 0x50, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x5F, 0xBC, 0x77, 0x05, 0xCF, 0xAE, 0x92, 0xE8, 0xD4, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x52, 0x01, 0x2A, 0x08, 0x9D, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0xEE, 0xA0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x35, 0xAF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xDD, 0xA0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x60, 0xD4, 0x57, 0x15, 0x80, 0x6A, 0x4D, 0x89, 0xAE, 0x53, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x9D, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0xEE, 0xA0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x35, 0xAF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xDD, 0xA0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x60, 0xD4, 0x57, 0x54, 0x15, 0x80, 0x6A, 0x4D, 0x89, 0xAE, 0xF5, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x65, 0x70, 0x86, 0x93, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0xEC, 0x7F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x6D, 0x70, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x05, 0x7B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x74, 0x8E, 0x43, 0xF0, 0x5E, 0x0D, 0x63, 0xDC, 0x4D, 0x75, 0xF1, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x65, 0x70, 0x86, 0x93, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0xEC, 0x7F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x6D, 0x70, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x05, 0x7B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8E, 0x43, 0xF0, 0x5E, 0x0D, 0x63, 0xDC, 0x4D, 0x75, 0xF5, 0x18, 0x18, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x25, 0x08, 0xFD, 0xFD, 0x57, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x18, 0x18, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x58, 0x00, 0x03, 0x25, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x94, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x90, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x59, 0xFD, 0xF5, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xA7, 0xC9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0xE8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0C, 0x7C, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xEA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8F, 0x6E, 0x5A, 0xA2, 0xD0, 0x90, 0xE4, 0xF9, 0x47, 0xC1, 0xF1, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xA7, 0xC9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0xE8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0C, 0x7C, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xEA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0x00, 0x00, 0x00, 0x74, 0x8F, 0x6E, 0xA2, 0xD0, 0x90, 0xE4, 0xF9, 0x47, 0xC1, 0xB5, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xAD, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x90, 0x0C, 0xCE, 0x2B, 0x27, 0xDC, 0x29, 0xE4, 0x09, 0xB1, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xAD, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x90, 0x0C, 0xCE, 0x2B, 0x27, 0xDC, 0x29, 0xE4, 0x09, 0x5C, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xDA, 0x90, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x91, 0xD0, 0x9E, 0x0E, 0x65, 0x65, 0xBD, 0x10, 0x77, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xDA, 0x90, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x91, 0xD0, 0x9E, 0x0E, 0x65, 0x65, 0xBD, 0x10, 0x77, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x5D, 0x00, 0x00, 0x62, 0x08, 0xA3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x97, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xEE, 0x18, 0x8E, 0x52, 0xFE, 0x3F, 0x3F, 0xC2, 0xF4, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xA3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x97, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xEE, 0x18, 0x8E, 0x5E, 0x52, 0xFE, 0x3F, 0x3F, 0xC2, 0xF4, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x27, 0xD6, 0x80, 0x26, 0x53, 0xA3, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0x92, 0xD2, 0xBD, 0x66, 0x7C, 0x31, 0x41, 0x88, 0x8F, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x27, 0xD6, 0x80, 0x26, 0x53, 0xA3, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0x92, 0xD2, 0xBD, 0x66, 0x7C, 0x31, 0x41, 0x88, 0x5F, 0x8F, 0xB5, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x21, 0x70, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xEF, 0x55, 0x7A, 0x48, 0x2C, 0xD4, 0x1E, 0xBF, 0xF6, 0xB1, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x21, 0x70, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xEF, 0x55, 0x7A, 0x48, 0x2C, 0xD4, 0x1E, 0xBF, 0xF6, 0x85, 0x38, 0x30, 0x00, 0x00, 0x44, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x60, 0x00, 0x81, 0x38, 0x30, 0x00, 0x00, 0x44, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0xC5, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0x03, 0x54, 0x08, 0xBB, 0xD3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0xF0, 0x15, 0x27, 0xD4, 0x3B, 0xB9, 0xFC, 0x6B, 0x3E, 0xC1, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0x03, 0x54, 0x08, 0xBB, 0xD3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0x61, 0xF0, 0x15, 0x27, 0xD4, 0x3B, 0xB9, 0xFC, 0x6B, 0x3E, 0xE5, 0x40, 0x2C, 0x00, 0x00, 0x00, 0x04, 0x4D, 0x05, 0xE6, 0x60, 0x00, 0x00, 0x00, 0x00, 0x04, 0x77, 0x08, 0x6F, 0xC3, 0x12, 0x40, 0x62, 0xC0, 0x40, 0x50, 0x00, 0x04, 0x7A, 0x08, 0x1D, 0x14, 0x77, 0x01, 0x60, 0x01, 0x20, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC1, 0x95, 0xF8, 0xAA, 0xCD, 0x5A, 0xAC, 0xE3, 0x1D, 0xE1, 0x62, 0x40, 0x2C, 0x00, 0x00, 0x00, 0x04, 0x4D, 0x05, 0xE6, 0x60, 0x00, 0x00, 0x00, 0x00, 0x04, 0x77, 0x08, 0x6F, 0xC3, 0x12, 0x40, 0x62, 0xC0, 0x40, 0x50, 0x00, 0x04, 0x7A, 0x08, 0x1D, 0x14, 0x77, 0x01, 0x60, 0x01, 0x20, 0xC4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC1, 0x95, 0xF8, 0xAA, 0xCD, 0x5A, 0xAC, 0xE3, 0x1D, 0xF5, 0x58, 0x2C, 0x00, 0x00, 0x00, 0x04, 0x4E, 0x05, 0x41, 0x51, 0x63, 0x33, 0x40, 0x00, 0x00, 0x04, 0x78, 0x08, 0x01, 0x02, 0x02, 0x03, 0x00, 0x00, 0x20, 0x00, 0x00, 0x04, 0x79, 0x08, 0xFC, 0xF8, 0x10, 0x00, 0x20, 0x02, 0xD6, 0x2E, 0x00, 0x03, 0xB0, 0x03, 0xB6, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC2, 0xF1, 0x2E, 0x34, 0x41, 0x04, 0x82, 0x64, 0x3C, 0xF1, 0x58, 0x2C, 0x00, 0x00, 0x64, 0x00, 0x04, 0x4E, 0x05, 0x41, 0x51, 0x33, 0x40, 0x00, 0x00, 0x04, 0x78, 0x08, 0x01, 0x02, 0x02, 0x03, 0x00, 0x00, 0x20, 0x00, 0x00, 0x04, 0x79, 0x08, 0xFC, 0xF8, 0x10, 0x00, 0x20, 0x02, 0xD6, 0x2E, 0x00, 0x03, 0xB0, 0x03, 0xB6, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC2, 0xF1, 0x2E, 0x34, 0x41, 0x04, 0x82, 0x64, 0x65, 0x3C, 0xB5, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xC4, 0xEB, 0x60, 0x00, 0x00, 0x00, 0x74, 0x93, 0xAA, 0x8E, 0x6A, 0x4E, 0x57, 0x90, 0xB8, 0xEB, 0xB1, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xC4, 0xEB, 0x60, 0x00, 0x00, 0x00, 0x74, 0x93, 0xAA, 0x8E, 0x6A, 0x4E, 0x57, 0x90, 0xB8, 0xEB, 0xC5, 0x38, 0x2F, 0x00, 0x00, 0x00, 0x05, 0xE7, 0x07, 0x00, 0x00, 0x20, 0x66, 0x18, 0x00, 0x01, 0x7C, 0x00, 0x00, 0x00, 0x07, 0xC4, 0x6D, 0x17, 0xB0, 0xEF, 0x06, 0x3D, 0x0C, 0x81, 0xC1, 0x38, 0x2F, 0x00, 0x00, 0x00, 0x05, 0xE7, 0x07, 0x00, 0x00, 0x20, 0x18, 0x00, 0x01, 0x7C, 0x00, 0x00, 0x00, 0x07, 0xC4, 0x6D, 0x17, 0xB0, 0xEF, 0x06, 0x3D, 0x0C, 0x81, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x67, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x7D, 0xF0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x94, 0x03, 0x80, 0xED, 0x3B, 0x39, 0xDE, 0xFB, 0x79, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x7D, 0xF0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x94, 0x03, 0x80, 0xED, 0x3B, 0x39, 0xDE, 0xFB, 0x79, 0x75, 0x00, 0x12, 0x00, 0x00, 0x00, 0x68, 0x00, 0x03, 0xFE, 0x00, 0x38, 0xF6, 0x71, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x38, 0xF6, 0x85, 0x58, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x81, 0x58, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xDE, 0x00, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0x69, 0xE0, 0x02, 0xD4, 0x00, 0x00, 0x01, 0x9A, 0x08, 0x06, 0x00, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xAD, 0x00, 0x00, 0x00, 0x52, 0xDF, 0x7D, 0x2F, 0xA3, 0x85, 0x95, 0x30, 0xF4, 0x90, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xDE, 0x00, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xD4, 0x00, 0x00, 0x01, 0x9A, 0x08, 0x06, 0x00, 0x6A, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xAD, 0x00, 0x00, 0x00, 0x52, 0xDF, 0x7D, 0x2F, 0xA3, 0x85, 0x95, 0x30, 0xF4, 0x90, 0xB5, 0x60, 0x22, 0x00, 0x00, 0x00, 0x04, 0x4C, 0x06, 0x60, 0x40, 0x00, 0x81, 0x54, 0x00, 0x74, 0x95, 0x5D, 0xC5, 0x96, 0x8D, 0x23, 0x8F, 0xC3, 0x2B, 0xB1, 0x60, 0x22, 0x00, 0x00, 0x00, 0x04, 0x4C, 0x06, 0x60, 0x40, 0x00, 0x81, 0x54, 0x6B, 0x00, 0x74, 0x95, 0x5D, 0xC5, 0x96, 0x8D, 0x23, 0x8F, 0xC3, 0x2B, 0x25, 0xF8, 0x30, 0x00, 0x00, 0x80, 0x00, 0x21, 0xF8, 0x30, 0x00, 0x00, 0x80, 0x00, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x6C, 0xB0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x62, 0xD5, 0x06, 0xCD, 0x2B, 0xDE, 0xCB, 0x62, 0x64, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x6C, 0xB0, 0x00, 0x00, 0x6C, 0x00, 0x00, 0xBB, 0x62, 0xD5, 0x06, 0xCD, 0x2B, 0xDE, 0xCB, 0x62, 0x64, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xB5, 0xF0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0x28, 0xF4, 0xE1, 0xC2, 0x16, 0x37, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x36, 0x80, 0xDB, 0x91, 0xEE, 0x7C, 0x8B, 0x6D, 0x76, 0xAF, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xB5, 0xF0, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB8, 0x00, 0x00, 0x75, 0x08, 0x28, 0xF4, 0xE1, 0xC2, 0x16, 0x37, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x36, 0x80, 0xDB, 0x91, 0xEE, 0x7C, 0x8B, 0x76, 0xAF, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x6E, 0x08, 0x24, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x57, 0xB0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x8C, 0xBF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x64, 0xB0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x63, 0x97, 0xF3, 0x6F, 0x92, 0x77, 0x83, 0x2D, 0x8B, 0xF1, 0xA0, 0x6F, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x24, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x57, 0xB0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x8C, 0xBF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x64, 0xB0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x63, 0x97, 0xF3, 0x6F, 0x92, 0x70, 0x77, 0x83, 0x2D, 0x8B, 0xF5, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x05, 0x80, 0x86, 0x98, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x45, 0x8F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xC4, 0x80, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xAC, 0x8B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x71, 0x74, 0x96, 0xFC, 0xA6, 0x53, 0x83, 0x33, 0xC3, 0x86, 0x12, 0xF1, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x05, 0x80, 0x86, 0x98, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x45, 0x8F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xC4, 0x80, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xAC, 0x8B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x96, 0xFC, 0xA6, 0x53, 0x83, 0x33, 0xC3, 0x86, 0x12, 0x85, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x1A, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x73, 0x2E, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF1, 0x96, 0x07, 0x2B, 0x30, 0x31, 0x02, 0x50, 0xB3, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x1A, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x2E, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF1, 0x96, 0x07, 0x2B, 0x30, 0x31, 0x02, 0x50, 0xB3, 0xB5, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0x02, 0x74, 0x78, 0x20, 0x00, 0x00, 0x00, 0x74, 0x97, 0x65, 0x51, 0x88, 0x98, 0xFA, 0x30, 0xC4, 0x90, 0xB1, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0x02, 0x78, 0x20, 0x00, 0x00, 0x00, 0x74, 0x97, 0x65, 0x51, 0x88, 0x98, 0xFA, 0x30, 0xC4, 0x90, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x0C, 0xA0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x98, 0xB6, 0xF1, 0x75, 0xAB, 0xC3, 0xD0, 0xFA, 0xE6, 0xD3, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x0C, 0xA0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0x98, 0xB6, 0xF1, 0xAB, 0xC3, 0xD0, 0xFA, 0xE6, 0xD3, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x82, 0xE6, 0x80, 0x26, 0x53, 0xAB, 0xBE, 0x7C, 0x00, 0x00, 0x74, 0x99, 0x93, 0xC4, 0x65, 0x56, 0x5D, 0x62, 0x99, 0x76, 0x92, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x82, 0xE6, 0x80, 0x26, 0x53, 0xAB, 0xBE, 0x7C, 0x00, 0x00, 0x74, 0x99, 0x93, 0xC4, 0x65, 0x56, 0x5D, 0x62, 0x99, 0x92, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x88, 0x22, 0x00, 0x00, 0x00, 0x04, 0x51, 0x08, 0x4C, 0x68, 0x88, 0xE6, 0x67, 0xA8, 0x00, 0x00, 0x77, 0x00, 0x00, 0x07, 0xC7, 0x77, 0x3F, 0xE3, 0xD7, 0xEC, 0xF5, 0xCC, 0xDA, 0xC1, 0x88, 0x22, 0x00, 0x00, 0x00, 0x04, 0x51, 0x08, 0x4C, 0x68, 0x88, 0xE6, 0x67, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC7, 0x77, 0x3F, 0xE3, 0xD7, 0xEC, 0xF5, 0xCC, 0xDA, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xD4, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9A, 0xF7, 0x78, 0x8F, 0x24, 0x6A, 0x1F, 0x73, 0xE0, 0x81, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xD4, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9A, 0xF7, 0x8F, 0x24, 0x6A, 0x1F, 0x73, 0xE0, 0x81, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x67, 0x10, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x6D, 0x10, 0x00, 0x01, 0x9A, 0x08, 0x79, 0xBF, 0x10, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x14, 0x10, 0x00, 0x00, 0x52, 0xE1, 0xBD, 0x64, 0xFE, 0x04, 0x04, 0xC1, 0x6F, 0x4F, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x67, 0x10, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x6D, 0x10, 0x00, 0x01, 0x9A, 0x08, 0xBF, 0x10, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0x7A, 0xB2, 0x04, 0x14, 0x10, 0x00, 0x00, 0x52, 0xE1, 0xBD, 0x64, 0xFE, 0x04, 0x04, 0xC1, 0x6F, 0x4F, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x81, 0x04, 0xE1, 0xC2, 0x16, 0x37, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x37, 0x42, 0xFE, 0x7B, 0x6A, 0xB7, 0xD9, 0xEC, 0x04, 0x5E, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x81, 0x04, 0xE1, 0xC2, 0x16, 0x37, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x37, 0x42, 0xFE, 0x6A, 0xB7, 0xD9, 0xEC, 0x04, 0x5E, 0x85, 0x40, 0x04, 0x00, 0x7C, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x64, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x64, 0xD4, 0xCE, 0x8F, 0x8E, 0x79, 0x82, 0xEF, 0x1F, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x64, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x7D, 0x64, 0xD4, 0xCE, 0x8F, 0x8E, 0x79, 0x82, 0xEF, 0x1F, 0xB5, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0xD5, 0x60, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x65, 0x13, 0x0B, 0x3A, 0x67, 0x15, 0xE4, 0x36, 0x9C, 0xB1, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0xD5, 0x60, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x65, 0x13, 0x0B, 0x3A, 0x67, 0x15, 0xE4, 0x36, 0x9C, 0xF5, 0xA0, 0x09, 0x00, 0x7E, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x2C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x5F, 0xC0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x84, 0xCF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x6C, 0xC0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x66, 0x0C, 0xBE, 0x5C, 0x56, 0xEE, 0x80, 0x7F, 0xB8, 0xAA, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x2C, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x5F, 0xC0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x84, 0xCF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x6C, 0xC0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x66, 0x80, 0x0C, 0xBE, 0x5C, 0x56, 0xEE, 0x80, 0xB8, 0xAA, 0xF4, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xBC, 0x90, 0x86, 0x98, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0xFC, 0x9F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x7D, 0x90, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x15, 0x9B, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9B, 0x5A, 0x3E, 0x16, 0xD1, 0x6C, 0x86, 0xE5, 0x02, 0xF0, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xBC, 0x90, 0x86, 0x98, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0xFC, 0x9F, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x7D, 0x90, 0x7C, 0xC7, 0xC5, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x15, 0x9B, 0xE8, 0x00, 0x54, 0x8E, 0x82, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9B, 0x5A, 0x3E, 0x16, 0xD1, 0x6C, 0x86, 0xE5, 0x02, 0x85, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6C, 0x51, 0x8A, 0x5E, 0xAC, 0x4F, 0x6C, 0x81, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6C, 0x51, 0x8A, 0x5E, 0xAC, 0x4F, 0x6C, 0x85, 0xE8, 0x29, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x03, 0x41, 0xE8, 0x00, 0x81, 0xE8, 0x29, 0x00, 0x83, 0x00, 0x00, 0x02, 0x00, 0x04, 0x03, 0x41, 0xE8, 0x00, 0xF4, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0x1E, 0xD9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x51, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0D, 0x61, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9C, 0x8F, 0x3C, 0x83, 0x1E, 0xA1, 0xA8, 0xFB, 0x96, 0xF0, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0x1E, 0xD9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x51, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0D, 0x61, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0xF7, 0x85, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9C, 0x8F, 0x3C, 0x83, 0x1E, 0xA1, 0xA8, 0xFB, 0x96, 0x65, 0xC8, 0x21, 0x00, 0x00, 0x4B, 0x00, 0x01, 0x6B, 0x50, 0x00, 0x61, 0xC8, 0x21, 0x00, 0x00, 0x4B, 0x00, 0x01, 0x6B, 0x50, 0x00, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xB3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x86, 0x03, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF2, 0x2A, 0x1C, 0xC3, 0xF3, 0x24, 0x66, 0xDE, 0x61, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xB3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF2, 0x2A, 0x1C, 0xC3, 0xF3, 0x24, 0x66, 0xDE, 0x61, 0xB5, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0x87, 0x14, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9E, 0xB8, 0x27, 0x13, 0x6B, 0x94, 0x0F, 0x98, 0xBF, 0xB1, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0x14, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x74, 0x9E, 0xB8, 0x27, 0x13, 0x6B, 0x94, 0x0F, 0x98, 0xBF, 0xB5, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x88, 0x80, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xF3, 0x8E, 0xC7, 0x17, 0x3E, 0xC9, 0x88, 0x56, 0x50, 0x63, 0xB1, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x88, 0x80, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xF3, 0x8E, 0xC7, 0x17, 0x3E, 0xC9, 0x56, 0x50, 0x63, 0xC5, 0xA8, 0x22, 0x00, 0x00, 0x00, 0x04, 0x55, 0x08, 0x8D, 0x20, 0x12, 0x00, 0x0A, 0x00, 0x00, 0x10, 0x00, 0x00, 0x74, 0x9F, 0x62, 0x0E, 0x7D, 0x1B, 0x29, 0x2F, 0x05, 0x64, 0xC1, 0xA8, 0x22, 0x00, 0x00, 0x00, 0x89, 0x04, 0x55, 0x08, 0x8D, 0x20, 0x12, 0x00, 0x0A, 0x00, 0x00, 0x10, 0x00, 0x00, 0x74, 0x9F, 0x62, 0x0E, 0x7D, 0x1B, 0x29, 0x2F, 0x05, 0x64, 0xB5, 0x18, 0x1E, 0x00, 0x00, 0x00, 0x03, 0xC2, 0x03, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF4, 0x32, 0x81, 0xAD, 0x36, 0xC5, 0x99, 0xB1, 0x20, 0xB1, 0x18, 0x1E, 0x00, 0x00, 0x00, 0x03, 0xC2, 0x03, 0xF0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x8A, 0x69, 0xF4, 0x32, 0x81, 0xAD, 0x36, 0xC5, 0x99, 0xB1, 0x20, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x80, 0xF6, 0x80, 0x26, 0x53, 0x56, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0xA1, 0x71, 0xD6, 0xC4, 0xA5, 0xDE, 0x64, 0x74, 0x26, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x80, 0xF6, 0x80, 0x26, 0x53, 0x56, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0xA1, 0x71, 0xD6, 0xC4, 0x8B, 0xA5, 0xDE, 0x64, 0x74, 0x26, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xB5, 0xB0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA0, 0x70, 0x6E, 0x4F, 0xED, 0x3C, 0x9C, 0xC9, 0x9B, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xB5, 0xB0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA0, 0x70, 0x6E, 0x4F, 0xED, 0x3C, 0x9C, 0xC9, 0x9B, 0x8C, 0xC5, 0x98, 0x22, 0x00, 0x00, 0x00, 0x04, 0x53, 0x08, 0x93, 0x07, 0x16, 0x70, 0xA0, 0xA9, 0x0E, 0x00, 0x00, 0x00, 0x07, 0xC8, 0x00, 0x65, 0x55, 0xC5, 0x91, 0xEB, 0xFF, 0x08, 0xC1, 0x98, 0x22, 0x00, 0x00, 0x00, 0x04, 0x53, 0x08, 0x93, 0x07, 0x16, 0x70, 0xA0, 0xA9, 0x0E, 0x00, 0x00, 0x00, 0x07, 0xC8, 0x00, 0x65, 0x55, 0xC5, 0x91, 0xEB, 0xFF, 0x08, 0xB5, 0x00, 0x11, 0x00, 0x00, 0x8D, 0x00, 0x02, 0x20, 0x03, 0x7D, 0xFB, 0x60, 0x00, 0x00, 0x00, 0x74, 0xA2, 0x91, 0xE7, 0x36, 0x41, 0x5E, 0xB8, 0xD1, 0x3A, 0xB1, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0x7D, 0xFB, 0x60, 0x00, 0x00, 0x00, 0x74, 0xA2, 0x91, 0xE7, 0x36, 0x41, 0x5E, 0xB8, 0xD1, 0x3A, 0x75, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x3C, 0xDB, 0x71, 0x00, 0x12, 0x00, 0x00, 0x00, 0x8E, 0x00, 0x03, 0xFE, 0x00, 0x3C, 0xDB, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x6D, 0x10, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA3, 0xC0, 0xC3, 0x1A, 0x01, 0xF7, 0xC2, 0xF0, 0x6A, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x6D, 0x10, 0x80, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA3, 0xC0, 0xC3, 0x1A, 0x01, 0xF7, 0xC2, 0xF0, 0x6A, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xB1, 0x20, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xBB, 0x20, 0x00, 0x01, 0x9A, 0x08, 0x69, 0x20, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xC2, 0x20, 0x00, 0x00, 0x52, 0xE2, 0xEF, 0x90, 0x29, 0x44, 0x6F, 0x5D, 0xA9, 0x9A, 0xBA, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xB1, 0x20, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xBB, 0x20, 0x00, 0x01, 0x9A, 0x08, 0x69, 0x20, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xC2, 0x20, 0x00, 0x00, 0x52, 0xE2, 0xEF, 0x29, 0x44, 0x6F, 0x5D, 0xA9, 0x9A, 0xBA, 0xB5, 0xF8, 0x04, 0x91, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xDD, 0xD0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x68, 0x4B, 0xB8, 0x55, 0x3C, 0x50, 0xCC, 0x99, 0x27, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xDD, 0xD0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x68, 0x4B, 0xB8, 0x55, 0x3C, 0x50, 0xCC, 0x99, 0x27, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x95, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x92, 0x40, 0x00, 0x00, 0xB8, 0x07, 0xE6, 0xD0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x3D, 0xDF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xD5, 0xD0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x69, 0xF4, 0x4D, 0xC6, 0x83, 0x46, 0x79, 0x3A, 0x3D, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x95, 0x93, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0xE6, 0xD0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x3D, 0xDF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xD5, 0xD0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x69, 0xF4, 0x4D, 0xC6, 0x83, 0x46, 0x79, 0x3A, 0x3D, 0xF4, 0x58, 0x0D, 0x00, 0x94, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x00, 0xA0, 0x86, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x2A, 0xAF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xE9, 0xA0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xC3, 0xAB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA4, 0x5A, 0x1F, 0x82, 0x64, 0x1F, 0xF3, 0x95, 0x05, 0xA5, 0xF0, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x00, 0xA0, 0x86, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x2A, 0xAF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xE9, 0xA0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xC3, 0xAB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA4, 0x96, 0x5A, 0x1F, 0x82, 0x64, 0x1F, 0xF3, 0x05, 0xA5, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x4D, 0x10, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0xF9, 0x14, 0xE1, 0xE2, 0x16, 0x37, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x38, 0x90, 0xEC, 0x29, 0xAB, 0x1E, 0x47, 0xD0, 0x3A, 0xE1, 0x60, 0x97, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x4D, 0x10, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0xF9, 0x14, 0xE1, 0xE2, 0x16, 0x37, 0x32, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x38, 0x90, 0xEC, 0x29, 0xAB, 0x1E, 0x47, 0xD0, 0x3A, 0x84, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0x98, 0xA0, 0x80, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xD4, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x0A, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x3E, 0x10, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF5, 0x64, 0x1B, 0xF7, 0xC5, 0x7C, 0xED, 0x23, 0x9B, 0xD0, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x0A, 0x10, 0x00, 0x99, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x3E, 0x10, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF5, 0x64, 0x1B, 0xF7, 0xC5, 0x7C, 0xED, 0x23, 0x9B, 0xB5, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0xAB, 0x88, 0x20, 0x00, 0x00, 0x00, 0x74, 0xA5, 0xC9, 0x1E, 0x68, 0xF3, 0xE9, 0xB5, 0xF0, 0x51, 0xB1, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0xAB, 0x88, 0x20, 0x00, 0x9A, 0x00, 0x00, 0x74, 0xA5, 0xC9, 0x1E, 0x68, 0xF3, 0xE9, 0xB5, 0xF0, 0x51, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xBD, 0xC0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA6, 0x66, 0x12, 0x3C, 0x25, 0xF1, 0x25, 0x9D, 0x94, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xBD, 0xC0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA6, 0x66, 0x9B, 0x12, 0x3C, 0x25, 0xF1, 0x25, 0x9D, 0x94, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x1A, 0x06, 0x80, 0x26, 0x53, 0x87, 0xBE, 0x9C, 0x00, 0x00, 0x74, 0xA7, 0xFF, 0x86, 0x64, 0x85, 0x2D, 0xF8, 0x94, 0xE7, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x1A, 0x06, 0x80, 0x26, 0x53, 0x87, 0xBE, 0x9C, 0x00, 0x00, 0x74, 0xA7, 0xFF, 0x86, 0x64, 0x85, 0x2D, 0xF8, 0x9C, 0x94, 0xE7, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xBB, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA8, 0x2E, 0xB4, 0x76, 0x58, 0x7D, 0x6B, 0xBC, 0xB6, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xBB, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x9D, 0x00, 0x00, 0x00, 0x74, 0xA8, 0x2E, 0xB4, 0x76, 0x58, 0x7D, 0x6B, 0xBC, 0xB6, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x08, 0x30, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x02, 0x30, 0x00, 0x01, 0x9A, 0x08, 0xD0, 0x30, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x7B, 0x30, 0x00, 0x00, 0x52, 0xE3, 0x8F, 0xEB, 0xAC, 0x33, 0xAD, 0x9E, 0xBC, 0x01, 0x81, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x08, 0x30, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x02, 0x30, 0x00, 0x01, 0x9A, 0x08, 0xD0, 0x30, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x7B, 0x30, 0x00, 0x00, 0x52, 0xE3, 0x8F, 0xEB, 0xAC, 0x33, 0xAD, 0xBC, 0x01, 0x81, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x74, 0x08, 0x9B, 0x20, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x4D, 0x24, 0xE2, 0x42, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x39, 0xF2, 0xD1, 0xD0, 0x14, 0xA7, 0x9A, 0x56, 0xA6, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x9B, 0x20, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0xA0, 0x00, 0x00, 0x75, 0x08, 0x4D, 0x24, 0xE2, 0x42, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x39, 0xF2, 0xD1, 0xD0, 0x14, 0xA7, 0x9A, 0x56, 0xA6, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x0B, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x6B, 0x45, 0x3A, 0x83, 0x11, 0x37, 0x0B, 0xA7, 0xF1, 0xB1, 0xF8, 0xA1, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x0B, 0xE0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x6B, 0x45, 0x3A, 0x83, 0x11, 0x37, 0x0B, 0xA7, 0xF1, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x43, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x30, 0xE0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0xEB, 0xEF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xA2, 0xB9, 0x07, 0x03, 0xE0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x6D, 0x2B, 0x1D, 0xDB, 0x6D, 0x77, 0xD0, 0x5B, 0x03, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x43, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x30, 0xE0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0xEB, 0xEF, 0xA3, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x03, 0xE0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x6D, 0x2B, 0x1D, 0xDB, 0x6D, 0x77, 0xD0, 0x5B, 0x03, 0xF5, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB9, 0xB0, 0x86, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x93, 0xBF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0xA4, 0x00, 0xB4, 0x08, 0x50, 0xB0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x7A, 0xBB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA9, 0x5E, 0xD6, 0x02, 0x31, 0x42, 0xE2, 0x4B, 0xF3, 0xF1, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB9, 0xB0, 0x86, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x93, 0xBF, 0xFF, 0xA5, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x50, 0xB0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x7A, 0xBB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xA9, 0x5E, 0xD6, 0x02, 0x31, 0x42, 0xE2, 0x4B, 0xF3, 0x85, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x81, 0x40, 0x04, 0xA6, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xB5, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0x6C, 0x70, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x6C, 0xB3, 0x07, 0xCA, 0x09, 0x7F, 0x99, 0x13, 0xD0, 0xB1, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0x6C, 0x70, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x6C, 0xB3, 0x07, 0xCA, 0x09, 0x7F, 0x99, 0x13, 0xD0, 0xF5, 0x18, 0x18, 0xA7, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x25, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x00, 0x00, 0x00, 0xF1, 0x18, 0x18, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x25, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0xA9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6C, 0x51, 0x8A, 0x5E, 0xAC, 0x4F, 0x6C, 0x80, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6C, 0x51, 0x8A, 0x5E, 0xAC, 0x4F, 0x6C, 0x94, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x90, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xAA, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xF5, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xC8, 0xE9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0E, 0x46, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAB, 0x00, 0x00, 0x74, 0xAA, 0x5E, 0x94, 0x6D, 0x29, 0xE0, 0xCD, 0xA8, 0x77, 0xF1, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xC8, 0xE9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0E, 0x46, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xD0, 0x00, 0x00, 0x00, 0xAC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xAA, 0x5E, 0x94, 0x6D, 0x29, 0xE0, 0xCD, 0xA8, 0x77, 0xB5, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xC2, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x74, 0xAB, 0xFA, 0x57, 0x20, 0xC7, 0xDF, 0x2F, 0x11, 0x59, 0xB1, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xC2, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x74, 0xAB, 0xFA, 0x57, 0x20, 0xAD, 0xC7, 0xDF, 0x2F, 0x11, 0x59, 0x85, 0x38, 0x1E, 0x00, 0x00, 0xB0, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x38, 0x1E, 0x00, 0x00, 0xB0, 0x5C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xDC, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0xE8, 0x20, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF6, 0x33, 0x4C, 0xCF, 0xAE, 0xB8, 0x2E, 0x95, 0xE5, 0x08, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xDC, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0xE8, 0x20, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF6, 0x33, 0x4C, 0xCF, 0xB8, 0x2E, 0x95, 0xE5, 0x08, 0x75, 0xC8, 0x1E, 0x00, 0x00, 0x00, 0x03, 0xA2, 0x03, 0x00, 0x00, 0x00, 0x71, 0xC8, 0x1E, 0x00, 0x00, 0x00, 0x03, 0xA2, 0x03, 0xAF, 0x00, 0x00, 0x00, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x04, 0xD0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xAC, 0xCD, 0xEF, 0xE6, 0x58, 0xC7, 0xCC, 0xC0, 0xEC, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x04, 0xD0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xAC, 0xCD, 0xEF, 0xE6, 0x58, 0xC7, 0xCC, 0xC0, 0xEC, 0xB5, 0xD8, 0xB0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x31, 0x90, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xF7, 0x27, 0xD0, 0x48, 0x0F, 0x46, 0xDF, 0x2A, 0x86, 0xB1, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x31, 0x90, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xF7, 0x27, 0xD0, 0x48, 0x0F, 0x46, 0xDF, 0x2A, 0x86, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x03, 0x16, 0x80, 0x26, 0x53, 0x9B, 0xB1, 0xBE, 0x7C, 0x00, 0x00, 0x74, 0xAD, 0xCE, 0x1E, 0x2A, 0x13, 0x90, 0x5A, 0x69, 0xED, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x03, 0x16, 0x80, 0x26, 0x53, 0x9B, 0xBE, 0x7C, 0x00, 0x00, 0x74, 0xAD, 0xCE, 0x1E, 0x2A, 0x13, 0x90, 0x5A, 0x69, 0xED, 0xC5, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0x03, 0x54, 0x08, 0x6D, 0xE3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0xB2, 0xF8, 0x2F, 0xAA, 0xFF, 0x91, 0xD4, 0x55, 0x09, 0xEA, 0xC1, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0x03, 0x54, 0x08, 0x6D, 0xE3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0xF8, 0x2F, 0xAA, 0xFF, 0x91, 0xD4, 0x55, 0x09, 0xEA, 0xE5, 0x50, 0x1F, 0x00, 0x00, 0x00, 0x04, 0xFC, 0x08, 0x00, 0x00, 0x04, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x04, 0x74, 0x08, 0x28, 0xC0, 0x00, 0x00, 0xB3, 0xFF, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x6E, 0x7C, 0x04, 0xFC, 0x48, 0xE4, 0xAA, 0x78, 0x5D, 0xE1, 0x50, 0x1F, 0x00, 0x00, 0x00, 0x04, 0xFC, 0x08, 0x00, 0x00, 0x04, 0x02, 0x40, 0x00, 0x00, 0x00, 0x00, 0x04, 0x74, 0x08, 0x28, 0xC0, 0x00, 0x00, 0xFF, 0xC0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x6E, 0x7C, 0x04, 0xFC, 0x48, 0xE4, 0xAA, 0x78, 0x5D, 0x85, 0x88, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x9C, 0x00, 0x00, 0x81, 0x88, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x19, 0x00, 0x9C, 0x00, 0x00, 0xB5, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xD4, 0x0B, 0x60, 0x00, 0x00, 0x00, 0x74, 0xAE, 0x3D, 0x24, 0xB5, 0xF0, 0x2A, 0xEA, 0xFF, 0x94, 0xF0, 0xB1, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xD4, 0x0B, 0x60, 0x00, 0x00, 0x00, 0x74, 0xAE, 0x3D, 0x24, 0xF0, 0x2A, 0xEA, 0xFF, 0x94, 0xF0, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x74, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x6D, 0x70, 0x00, 0x12, 0x00, 0xB6, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x6D, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x02, 0x30, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xAF, 0xE7, 0x21, 0xB1, 0xDA, 0x44, 0x48, 0x6A, 0xB1, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x02, 0x30, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xAF, 0xE7, 0x21, 0xB1, 0xDA, 0x44, 0xB7, 0x48, 0x6A, 0xB1, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x00, 0x40, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x0A, 0x40, 0x00, 0x01, 0x9A, 0x08, 0xD8, 0x40, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x73, 0x40, 0x00, 0x00, 0x52, 0xE4, 0xE7, 0x49, 0x38, 0x8E, 0x5A, 0x5D, 0xB2, 0x43, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0xB8, 0x35, 0x08, 0x00, 0x40, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x0A, 0x40, 0x00, 0x01, 0x9A, 0x08, 0xD8, 0x40, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x73, 0x40, 0x00, 0x00, 0x52, 0xE4, 0xE7, 0x49, 0x38, 0x8E, 0x5A, 0x5D, 0xB2, 0x43, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xB2, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x70, 0xB9, 0xBC, 0xCC, 0x3F, 0xED, 0x07, 0x06, 0xEC, 0x94, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xB2, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x70, 0xBC, 0xCC, 0x3F, 0xED, 0x07, 0x06, 0xEC, 0x94, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0xFA, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x89, 0xF0, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0xBA, 0x10, 0x06, 0x52, 0xFF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xBA, 0xF0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x71, 0x85, 0x3F, 0x13, 0x16, 0xFF, 0xFF, 0x68, 0x5E, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0xFA, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x89, 0xF0, 0x80, 0xBB, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x52, 0xFF, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xBA, 0xF0, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x71, 0x85, 0x3F, 0x13, 0x16, 0xFF, 0xFF, 0x68, 0x5E, 0xF5, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB1, 0xC0, 0x86, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0xBC, 0x08, 0x9B, 0xCF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x58, 0xC0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x72, 0xCB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB0, 0x6E, 0xB0, 0x85, 0x64, 0x81, 0xB0, 0x12, 0x5D, 0xF1, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xB1, 0xC0, 0x86, 0xBD, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x9B, 0xCF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x58, 0xC0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x72, 0xCB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB0, 0x6E, 0xB0, 0x85, 0x64, 0x81, 0xB0, 0x12, 0x5D, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0xBE, 0x00, 0x74, 0x08, 0x22, 0x30, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x35, 0x34, 0xE2, 0x62, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3A, 0x46, 0x33, 0xD3, 0x11, 0xE5, 0xFC, 0x8E, 0x1F, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x22, 0x30, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xBF, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x35, 0x34, 0xE2, 0x62, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3A, 0x46, 0x33, 0xD3, 0x11, 0xE5, 0xFC, 0x8E, 0x1F, 0xB5, 0xF8, 0x22, 0x00, 0x00, 0x00, 0x04, 0x5F, 0x04, 0xF8, 0xE4, 0x7D, 0x02, 0x00, 0x00, 0x7C, 0x3B, 0x9E, 0x3D, 0xAC, 0xC4, 0x86, 0x19, 0xD4, 0xDE, 0xB1, 0xC0, 0xF8, 0x22, 0x00, 0x00, 0x00, 0x04, 0x5F, 0x04, 0xF8, 0xE4, 0x7D, 0x02, 0x00, 0x00, 0x7C, 0x3B, 0x9E, 0x3D, 0xAC, 0xC4, 0x86, 0x19, 0xD4, 0xDE, 0x85, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xD4, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x65, 0x30, 0x00, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x51, 0x30, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF9, 0x15, 0x2F, 0x13, 0x2D, 0x93, 0x87, 0xD7, 0x81, 0xD0, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x65, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x51, 0x30, 0x00, 0x00, 0x00, 0x00, 0x69, 0xF9, 0x15, 0x2F, 0x13, 0x2D, 0x93, 0x87, 0xD7, 0x81, 0xC4, 0x68, 0xC2, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xF1, 0x26, 0x80, 0x26, 0x53, 0x8C, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0xB2, 0x19, 0x15, 0x09, 0x5C, 0x20, 0x0B, 0xFF, 0x82, 0xC0, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xF1, 0x26, 0x80, 0x26, 0x53, 0x8C, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0xB2, 0x19, 0x15, 0x09, 0x5C, 0x20, 0x0B, 0xFF, 0x82, 0xC4, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xC3, 0xA8, 0x07, 0xD2, 0xE0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB1, 0x79, 0x57, 0x10, 0xB8, 0x42, 0x9D, 0xE0, 0xE0, 0xC0, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xD2, 0xE0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB1, 0x79, 0x57, 0x10, 0xB8, 0x42, 0x9D, 0xE0, 0xE0, 0xB5, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0x12, 0x98, 0x20, 0xC4, 0x00, 0x00, 0x00, 0x74, 0xB3, 0xBC, 0x69, 0xB1, 0x3D, 0xE0, 0xF0, 0xD7, 0xBF, 0xB1, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0x12, 0x98, 0x20, 0x00, 0x00, 0x00, 0x74, 0xB3, 0xBC, 0x69, 0xB1, 0x3D, 0xE0, 0xF0, 0xD7, 0xBF, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xC5, 0x0A, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB4, 0x85, 0x28, 0x96, 0xEC, 0xB2, 0xE6, 0xCC, 0xC8, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x0A, 0x40, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB4, 0x85, 0x28, 0x96, 0xEC, 0xB2, 0xE6, 0xCC, 0xC8, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xB9, 0x50, 0x80, 0x27, 0x80, 0xC6, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xB3, 0x50, 0x00, 0x01, 0x9A, 0x08, 0x61, 0x50, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xCA, 0x50, 0x00, 0x00, 0x52, 0xE6, 0x90, 0x21, 0x00, 0xF8, 0xC3, 0x10, 0xFE, 0x6B, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xB9, 0x50, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xB3, 0x50, 0x00, 0xC7, 0x01, 0x9A, 0x08, 0x61, 0x50, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xCA, 0x50, 0x00, 0x00, 0x52, 0xE6, 0x90, 0x21, 0x00, 0xF8, 0xC3, 0x10, 0xFE, 0x6B, 0xB4, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x72, 0x30, 0x60, 0xCA, 0x1D, 0x68, 0x19, 0x76, 0xC3, 0xB0, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xC8, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x72, 0x30, 0x60, 0xCA, 0x1D, 0x68, 0x19, 0x76, 0xC3, 0xB5, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0xC5, 0x80, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x73, 0x2E, 0x34, 0x35, 0x91, 0x04, 0x3A, 0x12, 0x0D, 0xB1, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0xC5, 0x80, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x73, 0x2E, 0x34, 0x35, 0x91, 0x04, 0xC9, 0x3A, 0x12, 0x0D, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x20, 0x00, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0xFB, 0x0F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x13, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xCA, 0x74, 0x3C, 0x06, 0x0C, 0x71, 0x12, 0xF9, 0x2A, 0x63, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x53, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x20, 0x00, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0xFB, 0x0F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x13, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x74, 0x3C, 0x06, 0x0C, 0x71, 0x12, 0xF9, 0x2A, 0x63, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x2A, 0x40, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x3D, 0x44, 0xE2, 0x62, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3D, 0x74, 0x57, 0xF0, 0xCC, 0xBB, 0x5C, 0xF9, 0x52, 0x4C, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x2A, 0x40, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x3D, 0x44, 0xE2, 0x62, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3D, 0x74, 0x57, 0xF0, 0xBB, 0x5C, 0xF9, 0x52, 0x4C, 0xF5, 0x58, 0x0D, 0x00, 0x00, 0xCD, 0x00, 0x00, 0xFF, 0x06, 0x08, 0xD0, 0x86, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x22, 0xDF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xE1, 0xD0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xCB, 0xDB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB5, 0x38, 0x3D, 0x52, 0x98, 0xF0, 0x10, 0x0B, 0xCE, 0x7D, 0xF1, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x08, 0xD0, 0x86, 0x99, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x22, 0xDF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xE1, 0xD0, 0x7C, 0x77, 0xC1, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xCB, 0xDB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB5, 0x38, 0xCF, 0x3D, 0x52, 0x98, 0xF0, 0x10, 0x0B, 0x7D, 0x85, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xF5, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0x71, 0xF9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x3E, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0xD0, 0x04, 0x08, 0x00, 0x0F, 0x0F, 0x5B, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB6, 0x8E, 0xB8, 0x6C, 0xC3, 0x45, 0xDD, 0x90, 0x6A, 0xF1, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0x71, 0xF9, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x3E, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD1, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x0F, 0x5B, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xCD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB6, 0x8E, 0xB8, 0x6C, 0xC3, 0x45, 0xDD, 0x90, 0x6A, 0x85, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6C, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6C, 0x81, 0x38, 0x10, 0x00, 0x00, 0xD2, 0x4F, 0x6C, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6C, 0xB5, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0x7B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB7, 0x5B, 0xF3, 0x37, 0xCE, 0x73, 0xDA, 0x7D, 0xE6, 0xB1, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0x7B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB7, 0x5B, 0xF3, 0x37, 0xCE, 0x73, 0xDA, 0x7D, 0xE6, 0xA5, 0xE8, 0x34, 0x00, 0x00, 0xD3, 0x00, 0x00, 0x04, 0x52, 0x74, 0xB7, 0x00, 0x00, 0x5C, 0x68, 0xB9, 0xC3, 0x88, 0xAB, 0x5D, 0x2E, 0xA1, 0xE8, 0x34, 0x00, 0x00, 0x00, 0x00, 0x04, 0x52, 0x74, 0xB7, 0x00, 0x00, 0x5C, 0x68, 0xB9, 0xC3, 0x88, 0xAB, 0x5D, 0x2E, 0xD4, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x6D, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x59, 0x40, 0x00, 0x00, 0x00, 0xD4, 0x00, 0x69, 0xFA, 0x07, 0x65, 0x2C, 0xEA, 0xEF, 0xC4, 0xBF, 0xF9, 0xD0, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x6D, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x59, 0x40, 0x00, 0x00, 0x00, 0x00, 0x69, 0xFA, 0x07, 0x65, 0x2C, 0xEA, 0xEF, 0xC4, 0xBF, 0xF9, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x6B, 0xF0, 0x2A, 0x46, 0xA0, 0x80, 0xD5, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB8, 0x0C, 0x4D, 0xBF, 0xB4, 0x26, 0x9A, 0xAC, 0x5B, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x6B, 0xF0, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xB8, 0x0C, 0x4D, 0xBF, 0xB4, 0x26, 0x9A, 0xAC, 0x5B, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xC7, 0x36, 0x80, 0x26, 0x53, 0x8D, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0xD6, 0xB9, 0x15, 0xD4, 0x6D, 0xCE, 0x7F, 0x46, 0xF1, 0x2B, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xC7, 0x36, 0x80, 0x26, 0x53, 0x8D, 0x3E, 0x8C, 0x00, 0x00, 0x74, 0xB9, 0x15, 0xD4, 0x6D, 0xCE, 0x7F, 0x46, 0xF1, 0x2B, 0xB5, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0xE7, 0xA0, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xFB, 0x3F, 0x1F, 0x83, 0xAC, 0x16, 0x5A, 0x2D, 0x70, 0xD7, 0xB1, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0xE7, 0xA0, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xFB, 0x3F, 0x1F, 0x83, 0xAC, 0x16, 0x5A, 0x2D, 0x70, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xB5, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0x6D, 0x1B, 0x60, 0x00, 0x00, 0x00, 0x74, 0xBA, 0x24, 0xFC, 0x8D, 0xA2, 0x1E, 0xD8, 0xBF, 0x99, 0xDC, 0xB1, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0x6D, 0x1B, 0x60, 0x00, 0x00, 0x00, 0x74, 0xBA, 0x24, 0xFC, 0x8D, 0xA2, 0x1E, 0xBF, 0x99, 0xDC, 0x75, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x04, 0x40, 0x71, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x04, 0x40, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xB3, 0x50, 0xD9, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xBB, 0xAD, 0x8D, 0x70, 0xD4, 0x22, 0x9A, 0xCF, 0xBE, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xB3, 0x50, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xBB, 0xAD, 0x8D, 0x70, 0xD4, 0x22, 0x9A, 0xCF, 0xBE, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x6F, 0x60, 0x80, 0x27, 0x80, 0x00, 0x7D, 0xDA, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x65, 0x60, 0x00, 0x01, 0x9A, 0x08, 0xB7, 0x60, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x1C, 0x60, 0x00, 0x00, 0x52, 0xE7, 0x39, 0xDE, 0x10, 0x6D, 0x5E, 0xAA, 0x07, 0xCC, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x6F, 0x60, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x65, 0x60, 0x00, 0x01, 0x9A, 0xDB, 0x08, 0xB7, 0x60, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x1C, 0x60, 0x00, 0x00, 0x52, 0xE7, 0x39, 0xDE, 0x10, 0x6D, 0x5E, 0xAA, 0x07, 0xCC, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xA2, 0x10, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x76, 0xCC, 0x92, 0xCB, 0xBE, 0x88, 0x21, 0x31, 0x1F, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0xA2, 0x10, 0xDC, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x76, 0xCC, 0x92, 0xCB, 0xBE, 0x88, 0x21, 0x31, 0x1F, 0xF5, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0xEA, 0x10, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x99, 0x10, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x42, 0x1F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xAA, 0x10, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0xDD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x77, 0xF6, 0xCE, 0xAE, 0x4B, 0xE7, 0xA9, 0x2E, 0x7C, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0xEA, 0x10, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x99, 0x10, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x42, 0x1F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0xAA, 0xDE, 0x10, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x77, 0xF6, 0xCE, 0xAE, 0x4B, 0xE7, 0xA9, 0x2E, 0x7C, 0xF4, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xA2, 0xE0, 0x86, 0x96, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0xF4, 0xEF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xF0, 0xE0, 0x7C, 0x97, 0xC2, 0x7C, 0xDF, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x1D, 0xEB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xBC, 0x8A, 0x8A, 0x30, 0x14, 0xF8, 0x0E, 0x22, 0xA3, 0xF0, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0xA2, 0xE0, 0x86, 0x96, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0xF4, 0xEF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0xE0, 0xF0, 0xE0, 0x7C, 0x97, 0xC2, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0x1D, 0xEB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xBC, 0x8A, 0x8A, 0x30, 0x14, 0xF8, 0x0E, 0x22, 0xA3, 0xE4, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x93, 0x50, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x45, 0x54, 0xE2, 0x42, 0xE1, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3E, 0xAA, 0x96, 0x98, 0xC9, 0x6F, 0xF2, 0xD9, 0x83, 0xE0, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x93, 0x50, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x45, 0x54, 0xE2, 0x42, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3E, 0xAA, 0x96, 0x98, 0xC9, 0x6F, 0xF2, 0xD9, 0x83, 0x84, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0x80, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6C, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xA0, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xD4, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE3, 0xCA, 0x03, 0xE0, 0x50, 0x00, 0x00, 0x00, 0x00, 0x69, 0xFC, 0x0E, 0x41, 0xA2, 0xFB, 0x4F, 0xB3, 0xA8, 0x43, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0xD4, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0xE0, 0x50, 0x00, 0x00, 0x00, 0x00, 0x69, 0xFC, 0x0E, 0x41, 0xA2, 0xFB, 0x4F, 0xB3, 0xA8, 0x43, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0xE4, 0x07, 0xC2, 0x00, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xBD, 0xEE, 0x17, 0xDA, 0xD2, 0x7D, 0x88, 0x8D, 0xDF, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0xC2, 0x00, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xBD, 0xEE, 0x17, 0xDA, 0xD2, 0x7D, 0x88, 0x8D, 0xDF, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xBF, 0x46, 0x80, 0x26, 0xE5, 0x53, 0xA8, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0xBE, 0x28, 0x2C, 0x2A, 0x85, 0xF7, 0xD2, 0xEE, 0xEE, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0xBF, 0x46, 0x80, 0x26, 0x53, 0xA8, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0xBE, 0x28, 0x2C, 0x2A, 0x85, 0xF7, 0xD2, 0xEE, 0xEE, 0xB5, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0xC4, 0xA8, 0x20, 0x00, 0x00, 0x00, 0x74, 0xBF, 0x91, 0xE6, 0xCF, 0xB5, 0x6B, 0x8A, 0xE5, 0x30, 0x5B, 0xB1, 0xB0, 0x10, 0x00, 0x00, 0x00, 0x02, 0x16, 0x04, 0xC4, 0xA8, 0x20, 0x00, 0x00, 0x00, 0x74, 0xBF, 0x91, 0xCF, 0xB5, 0x6B, 0x8A, 0xE5, 0x30, 0x5B, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0xC5, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x65, 0x60, 0x80, 0x00, 0x00, 0x00, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC0, 0xEE, 0x8C, 0x9F, 0xBD, 0xE5, 0x27, 0x9C, 0xA4, 0xC1, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0x65, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC0, 0xEE, 0x8C, 0x9F, 0xBD, 0xE5, 0x27, 0x9C, 0xA4, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xD6, 0x70, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0xE8, 0x02, 0xDC, 0x70, 0x00, 0x01, 0x9A, 0x08, 0x0E, 0x70, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xA5, 0x70, 0x00, 0x00, 0x52, 0xE8, 0xAC, 0xE8, 0x6D, 0x6E, 0x6D, 0x79, 0xE9, 0xC2, 0xE1, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0xD6, 0x70, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0xDC, 0x70, 0x00, 0x01, 0x9A, 0x08, 0x0E, 0x70, 0x00, 0xE9, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0xA5, 0x70, 0x00, 0x00, 0x52, 0xE8, 0xAC, 0xE8, 0x6D, 0x6E, 0x6D, 0x79, 0xE9, 0xC2, 0xB5, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x74, 0x20, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x78, 0x28, 0xC2, 0x21, 0x68, 0x6C, 0xB3, 0x65, 0xB4, 0xB1, 0xF8, 0x04, 0x00, 0x00, 0x00, 0x00, 0x9F, 0x05, 0x74, 0x20, 0x00, 0x00, 0x00, 0x00, 0xEA, 0xBB, 0x78, 0x28, 0xC2, 0x21, 0x68, 0x6C, 0xB3, 0x65, 0xB4, 0xB5, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0x7C, 0x90, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x79, 0x31, 0x31, 0xE7, 0x9D, 0x4B, 0xF8, 0x12, 0xEA, 0xB1, 0x90, 0x16, 0x00, 0x00, 0x00, 0x02, 0xD2, 0x05, 0x7C, 0x90, 0x5D, 0xC0, 0xFF, 0x00, 0xBB, 0x79, 0x31, 0x31, 0xE7, 0x9D, 0x4B, 0xF8, 0x12, 0xEA, 0xF5, 0xA0, 0x09, 0xEB, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x3C, 0x20, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x4F, 0x20, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x94, 0x2F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x7C, 0x20, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0x7A, 0xF9, 0xA0, 0x6C, 0x1C, 0x5E, 0xEC, 0x35, 0x89, 0x3F, 0xF1, 0xA0, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2A, 0x08, 0x3C, 0x20, 0x00, 0x00, 0x00, 0x00, 0x9C, 0x40, 0x00, 0x00, 0xB8, 0x07, 0x4F, 0x20, 0x80, 0x26, 0x40, 0x00, 0x00, 0x00, 0x01, 0x10, 0x06, 0x94, 0x2F, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0xB9, 0x07, 0x7C, 0x20, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xBB, 0xED, 0x7A, 0xF9, 0xA0, 0x6C, 0x1C, 0x5E, 0x35, 0x89, 0x3F, 0xF5, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x1B, 0xF0, 0x86, 0x96, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x4D, 0xFF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x49, 0xF0, 0x7C, 0x97, 0xC2, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xA4, 0xFB, 0xE8, 0x00, 0x54, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC1, 0x9E, 0x09, 0x56, 0xA3, 0x08, 0xE3, 0xA6, 0x5E, 0xF1, 0x58, 0x0D, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x06, 0x1B, 0xF0, 0x86, 0x96, 0x5D, 0xC2, 0x00, 0x01, 0xB4, 0x08, 0x4D, 0xFF, 0xFF, 0xFF, 0x7D, 0xFE, 0xFF, 0xF3, 0x00, 0x00, 0xB4, 0x08, 0x49, 0xF0, 0x7C, 0x97, 0xC2, 0x7C, 0xD7, 0xD0, 0x00, 0x00, 0xAB, 0x08, 0xA4, 0xFB, 0xE8, 0x00, 0x54, 0xEF, 0x8E, 0x7D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC1, 0x9E, 0x09, 0x56, 0xA3, 0x08, 0xE3, 0xA6, 0x5E, 0xF5, 0x18, 0x18, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x25, 0xF0, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF1, 0x18, 0x18, 0x00, 0x00, 0x00, 0x03, 0x22, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x23, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x24, 0x07, 0xFD, 0xFD, 0xFD, 0xFD, 0xF1, 0xFD, 0xFD, 0x00, 0x00, 0x03, 0x25, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x00, 0x03, 0x07, 0x08, 0xFD, 0xFD, 0x00, 0xFD, 0xFD, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE5, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x45, 0x60, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x93, 0x64, 0xE2, 0x42, 0x16, 0x37, 0x32, 0xA8, 0x00, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3F, 0xEF, 0xA1, 0xC2, 0xDA, 0xE0, 0xCA, 0x87, 0x50, 0xE1, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x45, 0x60, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xB0, 0x00, 0x00, 0x75, 0x08, 0x93, 0x64, 0xE2, 0x42, 0x16, 0x37, 0x32, 0xA8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF3, 0x00, 0x00, 0x00, 0x7C, 0x3F, 0xEF, 0xA1, 0xC2, 0xDA, 0xE0, 0xCA, 0x87, 0x50, 0xF5, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xD8, 0x09, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x00, 0xE0, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC2, 0x62, 0x32, 0xC3, 0xCF, 0x05, 0xC7, 0x13, 0x70, 0xF1, 0x30, 0x11, 0x00, 0x00, 0x00, 0x02, 0x25, 0x03, 0xD8, 0x09, 0xC0, 0x00, 0x02, 0x89, 0x08, 0x97, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x08, 0x0A, 0x08, 0x04, 0x08, 0x00, 0x0F, 0x00, 0xE0, 0x00, 0x02, 0x8A, 0x08, 0x00, 0x00, 0x00, 0x00, 0xF5, 0x00, 0x00, 0x00, 0x76, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC2, 0x62, 0x32, 0xC3, 0xCF, 0x05, 0xC7, 0x13, 0x70, 0x95, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x91, 0xA8, 0x18, 0x00, 0x00, 0x00, 0x03, 0x08, 0x08, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0xFD, 0x85, 0x40, 0x04, 0x00, 0xF6, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0x81, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x6E, 0x00, 0x00, 0x20, 0xA9, 0xED, 0xE0, 0xB5, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xD2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC3, 0x77, 0xBC, 0x9E, 0xDC, 0xE4, 0x6F, 0x2A, 0x0A, 0xB1, 0xE0, 0x12, 0x00, 0x00, 0x00, 0x02, 0x5C, 0x04, 0xD2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xF7, 0xC3, 0x77, 0xBC, 0x9E, 0xDC, 0xE4, 0x6F, 0x2A, 0x0A, 0xD5, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xCA, 0x03, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x69, 0xFD, 0xD7, 0xE4, 0x1E, 0x23, 0x2F, 0xD2, 0x88, 0xFF, 0xD1, 0x40, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x62, 0x08, 0x02, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x01, 0xCA, 0x03, 0x36, 0x60, 0x00, 0x00, 0x00, 0x00, 0x69, 0xFD, 0xD7, 0xE4, 0x1E, 0x23, 0x2F, 0xD2, 0x88, 0xFF, 0xC5, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x7B, 0x10, 0x2A, 0x46, 0xA0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC4, 0x07, 0x6D, 0x84, 0x2C, 0x98, 0xB5, 0xFB, 0xB5, 0xC1, 0x40, 0x05, 0x00, 0x00, 0x00, 0x00, 0xA8, 0x07, 0x7B, 0x10, 0x2A, 0x46, 0xA0, 0xF9, 0x80, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC4, 0x07, 0x6D, 0x84, 0x2C, 0x98, 0xB5, 0xFB, 0xB5, 0x85, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6E, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6E, 0x81, 0x38, 0x10, 0x00, 0x00, 0x4F, 0x6E, 0x51, 0x88, 0x5E, 0xAC, 0x4F, 0x6E, 0xB5, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x5E, 0xB0, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xFE, 0xBB, 0x76, 0xDF, 0xF2, 0xD1, 0xFA, 0x77, 0x18, 0x22, 0xB1, 0xD8, 0x12, 0x00, 0x00, 0x00, 0x02, 0x1B, 0x05, 0x5E, 0xB0, 0x7D, 0x00, 0x00, 0x00, 0x69, 0xFE, 0xBB, 0x76, 0xDF, 0xF2, 0xD1, 0x77, 0x18, 0x22, 0xC5, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0x03, 0x54, 0x08, 0xD4, 0xF3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0xFF, 0xCC, 0xE8, 0xC0, 0x4D, 0xEC, 0x6C, 0x61, 0xC7, 0xC1, 0xA0, 0x1A, 0x00, 0x00, 0x00, 0xFB, 0x03, 0x54, 0x08, 0xD4, 0xF3, 0xFB, 0xFE, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x69, 0xFF, 0xCC, 0xE8, 0xC0, 0x4D, 0xEC, 0x6C, 0x61, 0xC7, 0xC5, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x25, 0x56, 0x80, 0x26, 0x13, 0x72, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0xC5, 0xCC, 0xFB, 0x8E, 0x48, 0x73, 0xAF, 0x04, 0xBE, 0xC1, 0x68, 0x04, 0x00, 0x00, 0x00, 0x01, 0x41, 0x08, 0x25, 0x56, 0xFC, 0x80, 0x26, 0x13, 0x72, 0xBE, 0x8C, 0x00, 0x00, 0x74, 0xC5, 0xCC, 0xFB, 0x8E, 0x48, 0x73, 0xAF, 0x04, 0xBE, 0xB5, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xBB, 0x2B, 0x60, 0x00, 0x00, 0x00, 0x74, 0xC6, 0xF1, 0x28, 0xFC, 0x85, 0x30, 0x6D, 0xA3, 0x42, 0xB1, 0x00, 0x11, 0x00, 0x00, 0x00, 0x02, 0x20, 0x03, 0xBB, 0x2B, 0x60, 0x00, 0x00, 0x00, 0x74, 0xC6, 0xF1, 0x28, 0xFC, 0xFD, 0x85, 0x30, 0x6D, 0xA3, 0x42, 0x35, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x31, 0xF0, 0x08, 0x00, 0x00, 0x83, 0x4D, 0x80, 0x75, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x08, 0x37, 0x71, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x08, 0x37, 0xC4, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xDC, 0x70, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x74, 0xC7, 0xCE, 0xD7, 0xF2, 0x21, 0xD1, 0x28, 0x12, 0x09, 0xC0, 0x78, 0x09, 0x00, 0x00, 0x00, 0x01, 0x2F, 0x07, 0xDC, 0x70, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0xC7, 0xCE, 0xD7, 0xF2, 0x21, 0xD1, 0x28, 0x12, 0x09, 0xE5, 0x58, 0x04, 0x00, 0x00, 0x00, 0x01, 0x35, 0x08, 0x7F, 0x80, 0x80, 0x27, 0x80, 0x00, 0x7D, 0x00, 0x00, 0x01, 0xE0, 0x02, 0x75, 0x80, 0xFF, 0x00, 0x01, 0x9A, 0x08, 0xA7, 0x80, 0x00, 0x00, 0x80, 0x27, 0x80, 0x00, 0x00, 0x01, 0xB2, 0x04, 0x0C, 0x80, 0x00, 0x00, 0x52, 0xE9, 0x7A, 0x6E, 0x84, 0x9D, 0xD6, 0xDF, 0x6C, 0x4D};

unsigned char nissan7[] = {0x00, 0xE4, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x14, 0x10, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xC0, 0x00, 0x00, 0x75, 0x08, 0x31, 0x14, 0xE0, 0x42, 0x15, 0xF9, 0x32, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAD, 0x5E, 0x3C, 0xD2, 0x71, 0x64, 0x1D, 0xFB, 0x38, 0x59, 0xE0, 0x60, 0x04, 0x00, 0x00, 0x00, 0x00, 0x74, 0x08, 0x14, 0x01, 0x10, 0x00, 0x00, 0x00, 0x11, 0x3D, 0xC0, 0x00, 0x00, 0x75, 0x08, 0x31, 0x14, 0xE0, 0x42, 0x15, 0xF9, 0x32, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAD, 0x5E, 0x3C, 0xD2, 0x71, 0x64, 0x1D, 0xFB, 0x38, 0x59, 0xC4, 0xA8, 0x22, 0x00, 0x00, 0x00, 0x04, 0x55, 0x08, 0x85, 0x50, 0x12, 0x00, 0x0A, 0x00, 0x00, 0x10, 0x00, 0x00, 0x46, 0x02, 0xFE, 0x1C, 0x22, 0x29, 0x5E, 0x1B, 0x06, 0xA5, 0x20, 0xC0, 0xA8, 0x22, 0x00, 0x00, 0x00, 0x04, 0x55, 0x08, 0x85, 0x50, 0x12, 0x00, 0x0A, 0x00, 0x00, 0x10, 0x00, 0x00, 0x46, 0xFE, 0x1C, 0x22, 0x29, 0x5E, 0x1B, 0x06, 0xA5, 0x20, 0xB4, 0xF8, 0x22, 0x00, 0x00, 0x00, 0x04, 0x5F, 0x04, 0x9B, 0x14, 0x7E, 0x02, 0x00, 0x00, 0xAD, 0x5F, 0x32, 0x96, 0xBD, 0x15, 0x7D, 0x37, 0x60, 0xE3, 0x03, 0xB0, 0xF8, 0x22, 0x00, 0x00, 0x00, 0x04, 0x5F, 0x04, 0x9B, 0x14, 0x7E, 0x02, 0x00, 0x00, 0xAD, 0x5F, 0x32, 0x96, 0xBD, 0x15, 0x7D, 0x37, 0x60, 0xE3, 0x84, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x72, 0x00, 0x00, 0x20, 0xA9, 0xEE, 0x60, 0x80, 0x40, 0x04, 0x00, 0x00, 0x4F, 0x72, 0x00, 0x00, 0x20, 0xA9, 0xEE, 0x60 };

int main(int argc, char **argv) {
	std::cout << "Starting " << argv[0] << std::endl;

	Panda::printVersions();
	
	Panda::Can testCan;
	CanPrint mCanPrint;
	testCan.addObserver(&mCanPrint);
	
	testCan.initialize();
	testCan.startParsing();
	
	printf("\n------------- nissan1 ------------------\n");
	testCan.notificationCanRead((char*)nissan1, sizeof(nissan1));
	usleep(100000);
	
	printf("\n------------- nissan2 ------------------\n");
	testCan.notificationCanRead((char*)nissan2, sizeof(nissan2));
	usleep(100000);
	
	printf("\n------------- nissan3 ------------------\n");
	testCan.notificationCanRead((char*)nissan3, sizeof(nissan3));
	usleep(100000);
	
	printf("\n------------- nissan4 ------------------\n");
	testCan.notificationCanRead((char*)nissan4, sizeof(nissan4));
	usleep(100000);
	
	printf("\n------------- nissan5 ------------------\n");
	testCan.notificationCanRead((char*)nissan5, sizeof(nissan5));
	usleep(100000);
	
	printf("\n------------- nissan1 but malformed ------------------\n");
	nissan1[64*2] = 0; // should be 2
	testCan.notificationCanRead((char*)nissan1, sizeof(nissan1));
	usleep(100000);
	
	printf("\n------------- nissan6 ------------------\n");
	testCan.notificationCanRead((char*)nissan6, sizeof(nissan6));
	usleep(100000);
	
	printf("\n------------- nissan7 ------------------\n");
	testCan.notificationCanRead((char*)nissan7, sizeof(nissan7));
	usleep(100000);
	
	
	unsigned char testPack[256];
	Panda::CanFrame frame;
	
	std::cout << "\n\n------------- Building a custom message size 64 -------------" << std::endl;
	frame.messageID = 420;
	frame.bus = 2;
	frame.dataLength = 64;
	memset(frame.data, 0, 64);
	frame.data[0] = 69;
	
	int length = Panda::canFrameToBuffer(frame, testPack, 2);
	
	for	(int i = 0; i < length; i++) {
		if ( i % 16 == 0) {
			printf("\n");
		}
		printf("0x%02X ", testPack[i]);
	}
	printf("\n");
	

	std::cout << "Done." << std::endl;
	
	std::cout << "\nSending it through the parser:" << std::endl;
	testCan.notificationCanRead((char*)testPack, length);
	usleep(100000);
	
	

	
	
	std::cout << "\n\n------------- Building a custom message size 8 -------------" << std::endl;
	frame.messageID = 1000;
	frame.bus = 1;
	frame.dataLength = 8;
	memset(frame.data, 0, 64);
	frame.data[0] = 0;
	frame.data[1] = 1;
	frame.data[2] = 2;
	frame.data[3] = 3;
	frame.data[4] = 4;
	frame.data[5] = 5;
	frame.data[6] = 6;
	frame.data[7] = 7;
	
	length = Panda::canFrameToBuffer(frame, testPack, 2);
	
	for	(int i = 0; i < length; i++) {
		if ( i % 16 == 0) {
			printf("\n");
		}
		printf("0x%02X ", testPack[i]);
	}
	printf("\n");
	

	
	std::cout << "\nSending it through the parser:" << std::endl;
	testCan.notificationCanRead((char*)testPack, length);
	usleep(100000);
	
	

	
	std::cout << "\n\n------------- Building an INVALID message -------------:" << std::endl;
	frame.dataLength = 9;	// Invalid
	
	length = Panda::canFrameToBuffer(frame, testPack, 2);
	
	for	(int i = 0; i < length; i++) {
		if ( i % 16 == 0) {
			printf("\n");
		}
		printf("0x%02X ", testPack[i]);
	}
	printf("\n");
	
	std::cout << "\nSending it through the parser:" << std::endl;
	testCan.notificationCanRead((char*)testPack, length);
	usleep(100000);
	
	
	
	
	
	std::cout << "\n\n------------- Building an Extended OBD PID message -------------" << std::endl;
	frame.messageID = 0x18DB33F1; // 417018865
	frame.bus = 1;
	frame.dataLength = 8;
	frame.data[0] = 0x02;
	frame.data[1] = 0x09;
	frame.data[2] = 0x02;
	frame.data[3] = 0;
	frame.data[4] = 0;
	frame.data[5] = 0;
	frame.data[6] = 0;
	frame.data[7] = 0;
	
	length = Panda::canFrameToBuffer(frame, testPack, 2);
	
	for	(int i = 0; i < length; i++) {
		if ( i % 16 == 0) {
			printf("\n");
		}
		printf("0x%02X ", testPack[i]);
	}
	printf("\n");
	
	std::cout << "\nSending it through the parser:" << std::endl;
	testCan.notificationCanRead((char*)testPack, length);
	usleep(100000);
	
	
	
	std::cout << "\n\n------------- Checking VIN parsing -------------" << std::endl;
	unsigned char vin1[] = "5FNYF6H05HB089022";
	unsigned char vin2[] = "2T3Y1RFV8KC014025";
	unsigned char vin3[] = "JTMB6RFV5MD010181";
	unsigned char vin4[] = "JN8AT3CB9MW240939";
	unsigned char vin5[] = "1GYKNCRS3NZ112305";
	
	Panda::printVin(vin1);
	Panda::printVin(vin2);
	Panda::printVin(vin3);
	Panda::printVin(vin4);
	Panda::printVin(vin5);
	
	
	std::cout << "\n\n------------- Checking uBlox checksums -------------" << std::endl;
	
	unsigned char ubx1[] = {0xB5, 0x62, 0x06, 0x01, 0x08, 0x00, 0x01, 0x12, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x23, 0x2E };
	printf("Before:");
	for	(int i = 0; i < sizeof(ubx1); i++) {
		printf("0x%02X ", ubx1[i]);
	}
	printf("\n");
	Panda::setUbxChecksum((char*)ubx1);
	printf("After :");
	for	(int i = 0; i < sizeof(ubx1); i++) {
		printf("0x%02X ", ubx1[i]);
	}
	printf("\n");
	
	std::cout << "\n------------- Checking UBX command -------------" << std::endl;
	char ubxMake[100];
	int ubxLength = Panda::makeUbx(ubxMake, 0x06, 0x01, 0x0008, (char*)&ubx1[6]);
	printf("Result:");
	for	(int i = 0; i < ubxLength; i++) {
		printf("0x%02X ", ubxMake[i]);
	}
	printf("\n");
	
	testCan.stopParsing();
	std::cout << "Done." << std::endl;
	
	
	
	
	
	std::cout << "\n------------- Checking Nissan 303 -------------" << std::endl;
	//	1350645 	1656362686.4646 	1.0000 	303.0000 	00012f07a160260d260f9600 	12.0000
	//	1350674 	1656362686.4747 	1.0000 	303.0000 	00012f079070260d2a0f9e00 	12.0000
	//	1350697 	1656362686.4850 	1.0000 	303.0000 	00012f07ba80260d420fae00 	12.0000
	//	1350726 	1656362686.4949 	1.0000 	303.0000 	00012f07c090260d360fb400 	12.0000
	//
	//	torque = [841, 842, 848, 845]
	//	that's starting at bit 59
	//
	//	s = [997, 999, 1003, 1005]
	//	that's starting at bit 75
	//	the actual speed value is about x/20
	
	
	printf("Test data:2,303,00 01 2f 07 a1 60 26 0d 26 0f 96 00  << torque = 0xd24\n");
	
	frame = Panda::buildCanThreeOhThree(841, 997);
	printf("Result   :");
//	printf("%d.%06d,", (unsigned int)frame.sysTime.tv_sec, (int)frame.sysTime.tv_usec);
	//		for (int i = 0; i < bufLength; i++) {
	//			fprintf(csvDump, "%02x", converted[i]);
	//		}
	
	printf("%d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
//	printCanFrame(frame);
	
	frame.data[11] = 0x00;
	frame.data[10] = 0x96;
	frame.data[9] = 0x0f;
	frame.data[8] = 0x26;
	frame.data[7] = 0x0d;
	frame.data[6] = 0x26;
	frame.data[5] = 0x60;
	frame.data[4] = 0xa1;
	frame.data[3] = 0x07;
	frame.data[2] = 0x2f;
	frame.data[1] = 0x01;
	frame.data[0] = 0x00;
	
	int speed, torque;
	Panda::nissanParseThreeOhThree( frame, &torque, &speed  );
	printf("torque = %d, speed = %d\n", torque, speed);
	
	Panda::replaceCanThreeOhThree(&frame, 841, 997);
	printf("Replaced :");
//	printf("%d.%06d,", (unsigned int)frame.sysTime.tv_sec, (int)frame.sysTime.tv_usec);
	//		for (int i = 0; i < bufLength; i++) {
	//			fprintf(csvDump, "%02x", converted[i]);
	//		}
	
	printf("%d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	Panda::replaceCanThreeOhThree(&frame, 842, 999);
	printf("Replaced :");
//	printf("%d.%06d,", (unsigned int)frame.sysTime.tv_sec, (int)frame.sysTime.tv_usec);
	//		for (int i = 0; i < bufLength; i++) {
	//			fprintf(csvDump, "%02x", converted[i]);
	//		}
	
	printf("%d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
	
	
	
	
	
	printf("\nTest data:2,303,00 01 2f 07 90 70 26 0d 2a 0f 9e 00  << torque = 0xd28\n");
	
	frame = Panda::buildCanThreeOhThree(842, 999);
	printf("Result   :");
//	printf("%d.%06d,", (unsigned int)frame.sysTime.tv_sec, (int)frame.sysTime.tv_usec);
	//		for (int i = 0; i < bufLength; i++) {
	//			fprintf(csvDump, "%02x", converted[i]);
	//		}
	
	printf("%d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
	frame.data[11] = 0x00;
	frame.data[10] = 0x9e;
	frame.data[9] = 0x0f;
	frame.data[8] = 0x2a;
	frame.data[7] = 0x0d;
	frame.data[6] = 0x26;
	frame.data[5] = 0x70;
	frame.data[4] = 0x90;
	frame.data[3] = 0x07;
	frame.data[2] = 0x2f;
	frame.data[1] = 0x01;
	frame.data[0] = 0x00;
	Panda::nissanParseThreeOhThree( frame, &torque, &speed  );
	printf("torque = %d, speed = %d\n", torque, speed);
	
	Panda::replaceCanThreeOhThree(&frame, 842, 999);
	printf("Replaced :");
//	printf("%d.%06d,", (unsigned int)frame.sysTime.tv_sec, (int)frame.sysTime.tv_usec);
	//		for (int i = 0; i < bufLength; i++) {
	//			fprintf(csvDump, "%02x", converted[i]);
	//		}
	
	printf("%d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	Panda::replaceCanThreeOhThree(&frame, 841, 997);
	printf("Replaced :");
//	printf("%d.%06d,", (unsigned int)frame.sysTime.tv_sec, (int)frame.sysTime.tv_usec);
	//		for (int i = 0; i < bufLength; i++) {
	//			fprintf(csvDump, "%02x", converted[i]);
	//		}
	
	printf("%d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
	
	
	
	
	
	
	
	
	
	
	printf("\nTest data:2,303,00 01 2f 07 ba 80 26 0d 42 0f ae 00  << torque = 0xd40\n");
	
	frame = Panda::buildCanThreeOhThree(848, 1003);
	printf("Result   :");
//	printf("%d.%06d,", (unsigned int)frame.sysTime.tv_sec, (int)frame.sysTime.tv_usec);
	//		for (int i = 0; i < bufLength; i++) {
	//			fprintf(csvDump, "%02x", converted[i]);
	//		}
	
	printf("%d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	Panda::nissanParseThreeOhThree( frame, &torque, &speed  );
	printf("torque = %d, speed = %d\n", torque, speed);
	
	testCan.stopParsing();
	std::cout << "Done." << std::endl;
	
	
	
	std::cout << "\n------------- Checking Nissan 308 Parse -------------" << std::endl;
	
	// 00 01 2a 08 5b 70 00 00 00 00 9c 40 00 00 b8 07 27 70 80 73 80 00 00 00 01 10 06 85 7f 00 00 4e 20 00 00 b9 07 1b 70 7f fc 00 00 00 00 00 00 00 00 00 00 00 00 00 c6 fa 10 bf f6 c5 6d 87 ae c9
	int d = 0;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x01;
	frame.data[d++] = 0x2a;
	frame.data[d++] = 0x08;
	frame.data[d++] = 0x5b;
	frame.data[d++] = 0x70;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x9c;
	frame.data[d++] = 0x40;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0xb8;
	frame.data[d++] = 0x07;
	frame.data[d++] = 0x27;
	frame.data[d++] = 0x70;
	frame.data[d++] = 0x80;
	frame.data[d++] = 0x73;
	frame.data[d++] = 0x80;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x01;
	frame.data[d++] = 0x10;
	frame.data[d++] = 0x06;
	frame.data[d++] = 0x85;
	frame.data[d++] = 0x7f;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x4e;
	frame.data[d++] = 0x20;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0xb9;
	frame.data[d++] = 0x07;
	frame.data[d++] = 0x1b;
	frame.data[d++] = 0x70;
	frame.data[d++] = 0x7f;
	frame.data[d++] = 0xfc;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0xc6;
	frame.data[d++] = 0xfa;
	frame.data[d++] = 0x10;
	frame.data[d++] = 0xbf;
	frame.data[d++] = 0xf6;
	frame.data[d++] = 0xc5;
	frame.data[d++] = 0x6d;
	frame.data[d++] = 0x87;
	frame.data[d++] = 0xae;
	frame.data[d++] = 0xc9;
	frame.dataLength = d;
	
	printf("Test frame for CRUISE_STATE == 1, CRUISE_ENGAGED == 0: %d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
	unsigned char CRUISE_STATE;
	bool CRUISE_ENGAGED;
	Panda::nissanParseCruise( frame, &CRUISE_STATE, &CRUISE_ENGAGED  );
	printf("Result of parse: CRUISE_STATE = %d, CRUISE_ENGAGED = %d\n", (int)CRUISE_STATE, CRUISE_ENGAGED);
	
	
	// 00 01 2a 08 8e d0 00 02 50 54 9c 40 00 00 b8 07 a2 d0 7f 7b 00 00 00 00 01 10 06 4b df 00 00 4e 20 00 00 b9 07 d2 d6 7f fe 00 00 00 00 00 00 00 00 00 00 00 00 00 3c 08 74 55 dc 0f ad ad 01 4d
	d = 0;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x01;
	frame.data[d++] = 0x2a;
	frame.data[d++] = 0x08;
	frame.data[d++] = 0x8e;
	frame.data[d++] = 0xd0;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x02;
	frame.data[d++] = 0x50;
	frame.data[d++] = 0x54;
	frame.data[d++] = 0x9c;
	frame.data[d++] = 0x40;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0xb8;
	frame.data[d++] = 0x07;
	frame.data[d++] = 0xa2;
	frame.data[d++] = 0xd0;
	frame.data[d++] = 0x7f;
	frame.data[d++] = 0x7b;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x01;
	frame.data[d++] = 0x10;
	frame.data[d++] = 0x06;
	frame.data[d++] = 0x4b;
	frame.data[d++] = 0xdf;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x4e;
	frame.data[d++] = 0x20;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0xb9;
	frame.data[d++] = 0x07;
	frame.data[d++] = 0xd2;
	frame.data[d++] = 0xd6;
	frame.data[d++] = 0x7f;
	frame.data[d++] = 0xfe;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x3c;
	frame.data[d++] = 0x08;
	frame.data[d++] = 0x74;
	frame.data[d++] = 0x55;
	frame.data[d++] = 0xdc;
	frame.data[d++] = 0x0f;
	frame.data[d++] = 0xad;
	frame.data[d++] = 0xad;
	frame.data[d++] = 0x01;
	frame.data[d++] = 0x4d;
	
	printf("\nTest frame for CRUISE_STATE == 25, CRUISE_ENGAGED == 1: %d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
	Panda::nissanParseCruise( frame, &CRUISE_STATE, &CRUISE_ENGAGED  );
	printf("Result of parse: CRUISE_STATE = %d, CRUISE_ENGAGED = %d\n", (int)CRUISE_STATE, CRUISE_ENGAGED);
	
	std::cout << "\n------------- Checking Nissan 1119 Parse -------------" << std::endl;
	// 00 04 5f 04 d8 14 7b 02 00 00 b4 09 6a 8e ff d6 8f c2 3f 92 -> ACC_BTNS == 6
	frame.data[0] = 0x00;
	frame.data[1] = 0x04;
	frame.data[2] = 0x5f;
	frame.data[3] = 0x04;
	frame.data[4] = 0xd8;
	frame.data[5] = 0x14;
	frame.data[6] = 0x7c;
	frame.data[7] = 0x02;
	frame.data[8] = 0x00;
	frame.data[9] = 0x00;
	frame.data[10] = 0xb4;
	frame.data[11] = 0x09;
	frame.data[12] = 0x6a;
	frame.data[13] = 0x8e;
	frame.data[14] = 0xff;
	frame.data[15] = 0xd6;
	frame.data[16] = 0x8f;
	frame.data[17] = 0xc2;
	frame.data[18] = 0x3f;
	frame.data[19] = 0x92;
	frame.dataLength = 20;
	
	printf("Test frame for ACC_BTN == 0: %d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
	unsigned char ACC_BTNS;
	Panda::nissanParseWheelButtons(frame, &ACC_BTNS);
	printf("Result of parse: ACC_BTNS = %d\n", (int)ACC_BTNS);
	
	// 00 04 5f 04 a0 b4 7b aa 00 00 aa d5 49 78 2f 29 b1 de 3f a0
	frame.data[0] = 0x00;
	frame.data[1] = 0x04;
	frame.data[2] = 0x5f;
	frame.data[3] = 0x04;
	frame.data[4] = 0xa0;
	frame.data[5] = 0xb4;
	frame.data[6] = 0x7b;
	frame.data[7] = 0xaa;
	frame.data[8] = 0x00;
	frame.data[9] = 0x00;
	frame.data[10] = 0xaa;
	frame.data[11] = 0xd5;
	frame.data[12] = 0x49;
	frame.data[13] = 0x78;
	frame.data[14] = 0x2f;
	frame.data[15] = 0x29;
	frame.data[16] = 0xb1;
	frame.data[17] = 0xde;
	frame.data[18] = 0x3f;
	frame.data[19] = 0xa0;
	
	printf("\nTest frame for ACC_BTN == 5: %d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	Panda::nissanParseWheelButtons(frame, &ACC_BTNS);
	printf("Result of parse: ACC_BTNS = %d\n", (int)ACC_BTNS);
	
	
	std::cout << "\n------------- Checking Nissan 140 Parse -------------" << std::endl;
	// 00 00 74 08 81 10 00 00 00 11 3a 70 00 00 75 08 3a 14 dd 02 18 a8 32 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 b1 32 dc 3a fc fe d7 ec bd c1
	d = 0;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x74;
	frame.data[d++] = 0x08;
	frame.data[d++] = 0x81;
	frame.data[d++] = 0x10;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x11;
	frame.data[d++] = 0x3a;
	frame.data[d++] = 0x70;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x75;
	frame.data[d++] = 0x08;
	frame.data[d++] = 0x3a;
	frame.data[d++] = 0x14;
	frame.data[d++] = 0xdd;
	frame.data[d++] = 0x02;
	frame.data[d++] = 0x18;
	frame.data[d++] = 0xa8;
	frame.data[d++] = 0x32;
	frame.data[d++] = 0x18;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0xb1;
	frame.data[d++] = 0x32;
	frame.data[d++] = 0xdc;
	frame.data[d++] = 0x3a;
	frame.data[d++] = 0xfc;
	frame.data[d++] = 0xfe;
	frame.data[d++] = 0xd7;
	frame.data[d++] = 0xec;
	frame.data[d++] = 0xbd;
	frame.data[d++] = 0xc1;
	frame.dataLength = d;
	
	printf("Test frame for ACCEL_PEDAL_POSITION == 0: %d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
	int ACCEL_PEDAL_POSITION;
	
	Panda::nissanPedalThrottle(frame, &ACCEL_PEDAL_POSITION);
	printf("Result of parse: ACCEL_PEDAL_POSITION = %d\n", (int)ACCEL_PEDAL_POSITION);
	
	
	// 00 00 74 08 25 60 c0 27 00 11 40 80 00 00 75 08 36 65 06 c2 36 3f 39 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 a3 7d ef c6 54 ed 96 ea 26 04
	d = 0;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x74;
	frame.data[d++] = 0x08;
	frame.data[d++] = 0x25;
	frame.data[d++] = 0x60;
	frame.data[d++] = 0xc0;
	frame.data[d++] = 0x27;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x11;
	frame.data[d++] = 0x40;
	frame.data[d++] = 0x80;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x75;
	frame.data[d++] = 0x08;
	frame.data[d++] = 0x36;
	frame.data[d++] = 0x65;
	frame.data[d++] = 0x06;
	frame.data[d++] = 0xc2;
	frame.data[d++] = 0x36;
	frame.data[d++] = 0x3f;
	frame.data[d++] = 0x39;
	frame.data[d++] = 0x20;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0x00;
	frame.data[d++] = 0xa3;
	frame.data[d++] = 0x7d;
	frame.data[d++] = 0xef;
	frame.data[d++] = 0xc6;
	frame.data[d++] = 0x54;
	frame.data[d++] = 0xed;
	frame.data[d++] = 0x96;
	frame.data[d++] = 0xea;
	frame.data[d++] = 0x26;
	frame.data[d++] = 0x04;
	frame.dataLength = d;
	
	printf("\n Test frame for ACCEL_PEDAL_POSITION == 48: %d,%u,", (int)frame.bus, frame.messageID);
	
	for (int i =0; i < frame.dataLength; i++) {
		printf( "%02x ", frame.data[i]);
	}
	printf(",%d\n", frame.dataLength);
	
//	int ACCEL_PEDAL_POSITION;
	
	Panda::nissanPedalThrottle(frame, &ACCEL_PEDAL_POSITION);
	printf("Result of parse: ACCEL_PEDAL_POSITION = %d\n", (int)ACCEL_PEDAL_POSITION);
	
    
    
    
    std::cout << "\n\n------------- Toyota Time -------------" << std::endl;
    std::cout << "\n\n------------- Building an LKA message 740 -------------" << std::endl;
    frame.messageID = 740;
    frame.bus = 2;
    frame.dataLength = 5;
    memset(frame.data, 0, 5);
    frame.data[0] = 0xC2;
    frame.data[1] = 0x00;
    frame.data[2] = 0x00;
    frame.data[3] = 0x00;
    frame.data[4] = 0xAD;
    
    length = Panda::canFrameToBuffer(frame, testPack, 2);
    
    for    (int i = 0; i < length; i++) {
        if ( i % 16 == 0) {
            printf("\n");
        }
        printf("0x%02X ", testPack[i]);
    }
    printf("\n");
    
    printCanFrame(frame);
    
    unsigned char count;
    int16_t steerTorque;
    bool steerRequest;
    unsigned char lkaState;
    
    printf("Parsing LKA...");
    if(Panda::toyotaParseSteeringLKA(&frame, &count, &steerTorque, &steerRequest, &lkaState)) {
        printf(" - Success:");

        printf(" - count       : %d\n", count);
        printf(" - steerTorque : %d\n", steerTorque);
        printf(" - steerRequest: %d\n", steerRequest);
        printf(" - lkaState    : %d\n", (int)lkaState);
    } else {
        printf(" - FAILED: bad checksum or length");
        
    }
    

    std::cout << "Done." << std::endl;
    
    
    std::cout << "\n\n------------- Building an LKA message from function -------------" << std::endl;
    
    count = 55;
    steerTorque = -1234;
    steerRequest = 1;
    lkaState = 0x3F;
    printf(" - count       : %d\n", count);
    printf(" - steerTorque : %d\n", steerTorque);
    printf(" - steerRequest: %d\n", steerRequest);
    printf(" - lkaState    : %d\n", (int)lkaState);
    frame = Panda::buildSteeringLKA(count, steerTorque, steerRequest, lkaState);
    
    printf("Parsing LKA...");
    if(Panda::toyotaParseSteeringLKA(&frame, &count, &steerTorque, &steerRequest, &lkaState)) {
        printf(" - Success:");

        printf(" - count       : %d\n", count);
        printf(" - steerTorque : %d\n", steerTorque);
        printf(" - steerRequest: %d\n", steerRequest);
        printf(" - lkaState    : %d\n", (int)lkaState);
    } else {
        printf(" - FAILED: bad checksum or length");
        
    }
    
    std::cout << "Done." << std::endl;
    
    
    
    std::cout << "\n\n------------- Building anpother LKA message 740, steertorque = -572 -------------" << std::endl;
    frame.messageID = 740;
    frame.bus = 0;
    frame.dataLength = 5;
    memset(frame.data, 0, 5);
    frame.data[0] = 0x9d;
    frame.data[1] = 0xfd;
    frame.data[2] = 0xc4;
    frame.data[3] = 0x00;
    frame.data[4] = 0x49;
    
    length = Panda::canFrameToBuffer(frame, testPack, 2);
    
    for (int i = 0; i < length; i++) {
        if ( i % 16 == 0) {
            printf("\n");
        }
        printf("0x%02X ", testPack[i]);
    }
    printf("\n");
    
    printCanFrame(frame);
    
    printf("Parsing LKA...");
    if(Panda::toyotaParseSteeringLKA(&frame, &count, &steerTorque, &steerRequest, &lkaState)) {
        printf(" - Success:");

        printf(" - count       : %d\n", count);
        printf(" - steerTorque : %d\n", steerTorque);
        printf(" - steerRequest: %d\n", steerRequest);
        printf(" - lkaState    : %d\n", (int)lkaState);
    } else {
        printf(" - FAILED: bad checksum or length");
        
    }
    
    int desired_torque = (frame.data[1] << 8) | frame.data[2];
    desired_torque = to_signed(desired_torque, 16);
    printf("Panda sees torque as: %d\n", desired_torque);
    

    std::cout << "Done." << std::endl;
    
    
    std::cout << "\n\n------------- Building LTA message 401 -------------" << std::endl;
    
    count = 0xFA >> 1;
    frame = Panda::buildSteeringLTA(count, 0, 0 );
    length = Panda::canFrameToBuffer(frame, testPack, 2);
    
    for (int i = 0; i < length; i++) {
        if ( i % 16 == 0) {
            printf("\n");
        }
        printf("0x%02X ", testPack[i]);
    }
    printf("\n");
    
    printf("Checksum: 0x%02X against 0x%02X\n", Panda::toyotaChecksum(frame), frame.data[7]);
    
    //401 0 FA 00 00 30 64 64 00 8C
    
    bool lta_request = (frame.data[0] & 1U) != 0U;
    bool lta_request2 = ((frame.data[3] >> 1) & 1U) != 0U;
    int lta_angle = (frame.data[1] << 8) | frame.data[2];
    
    printf("Panda inteprets this as:\n");
    printf(" - lta_request = %d\n", lta_request);
    printf(" - lta_request2 = %d\n", lta_request2);
    printf(" - lta_angle = %d\n", to_signed( lta_angle, 16));
    
    std::cout << "Done." << std::endl;
    
    
    std::cout << "\n\n------------- Building LTA message 401 Round 2 -------------" << std::endl;
    
    count = 0x55 >> 1;
    frame = Panda::buildSteeringLTA(count, -1337, 1 );
    length = Panda::canFrameToBuffer(frame, testPack, 2);
    
    for (int i = 0; i < length; i++) {
        if ( i % 16 == 0) {
            printf("\n");
        }
        printf("0x%02X ", testPack[i]);
    }
    printf("\n");
    
    printf("Checksum: 0x%02X against 0x%02X\n", Panda::toyotaChecksum(frame), frame.data[7]);
    
    
    lta_request = (frame.data[0] & 1U) != 0U;
    lta_request2 = ((frame.data[3] >> 1) & 1U) != 0U;
    lta_angle = ( frame.data[1] << 8) | frame.data[2];
    
    printf("Panda inteprets this as:\n");
    printf(" - lta_request = %d\n", lta_request);
    printf(" - lta_request2 = %d\n", lta_request2);
    printf(" - lta_angle = %d\n", to_signed( lta_angle, 16));
    std::cout << "Done." << std::endl;
    
    std::cout << "\nSending it through the parser:" << std::endl;
    testCan.notificationCanRead((char*)testPack, length);
    usleep(100000);
    
    
	return 0;
}
